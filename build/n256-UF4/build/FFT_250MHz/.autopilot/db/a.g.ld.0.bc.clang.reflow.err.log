remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/build/hls_clib/lnx64/hlsmath_csyn_cpp/objs/src/c++/sincoscordicdouble.pp.cpp:0:0: __cxx_global_var_init.3.9984 not inlined into _GLOBAL__sub_I_sincoscordicdouble.pp.cpp because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/build/hls_clib/lnx64/hlsmath_csyn_common/objs/src/common/hls_hotbm_double.pp.cpp:0:0: __cxx_global_var_init.644 not inlined into _GLOBAL__sub_I_hls_hotbm_double.pp.cpp because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/build/hls_clib/lnx64/hlsmath_csyn_common/objs/src/common/hls_hotbm_double.pp.cpp:0:0: __cxx_global_var_init.773 not inlined into _GLOBAL__sub_I_hls_hotbm_double.pp.cpp because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/build/hls_clib/lnx64/hlsmath_csyn_common/objs/src/common/hls_hotbm_double.pp.cpp:0:0: __cxx_global_var_init.902 not inlined into _GLOBAL__sub_I_hls_hotbm_double.pp.cpp because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/build/hls_clib/lnx64/hlsmath_csyn_common/objs/src/common/hls_hotbm_double.pp.cpp:0:0: __cxx_global_var_init.1031 not inlined into _GLOBAL__sub_I_hls_hotbm_double.pp.cpp because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/build/hls_clib/lnx64/hlsmath_csyn_common/objs/src/common/hls_hotbm_double.pp.cpp:0:0: __cxx_global_var_init.1160 not inlined into _GLOBAL__sub_I_hls_hotbm_double.pp.cpp because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/build/hls_clib/lnx64/hlsmath_csyn_common/objs/src/common/hls_hotbm_double.pp.cpp:0:0: __cxx_global_var_init.1289 not inlined into _GLOBAL__sub_I_hls_hotbm_double.pp.cpp because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/build/hls_clib/lnx64/hlsmath_csyn_common/objs/src/common/hls_hotbm_double.pp.cpp:0:0: __cxx_global_var_init.1470 not inlined into _GLOBAL__sub_I_hls_hotbm_double.pp.cpp because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/build/hls_clib/lnx64/hlsmath_csyn_common/objs/src/common/hls_hotbm_double.pp.cpp:0:0: __cxx_global_var_init.1707 not inlined into _GLOBAL__sub_I_hls_hotbm_double.pp.cpp because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/build/hls_clib/lnx64/hlsmath_csyn_common/objs/src/common/hls_hotbm_double.pp.cpp:0:0: __cxx_global_var_init.1962 not inlined into _GLOBAL__sub_I_hls_hotbm_double.pp.cpp because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/build/hls_clib/lnx64/hlsmath_csyn_common/objs/src/common/hls_hotbm_double.pp.cpp:0:0: __cxx_global_var_init.2217 not inlined into _GLOBAL__sub_I_hls_hotbm_double.pp.cpp because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/src/shared/hls/clib/hlsmath/include/FloatingPoint/hls_range_redux.h:553:18: fp_struct<double>::fp_struct(double) not inlined into void range_redux_payne_hanek_hotbm_pi<61, double, 63, 63>(double, ap_uint<3>&, ap_ufixed<63, 0, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_ufixed<63, 0, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_int<fp_struct<double>::EXP_BITS>&, int&) because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/src/shared/hls/clib/hlsmath/include/FloatingPoint/hls_range_redux.h:554:21: fp_struct<double>::expv() const not inlined into void range_redux_payne_hanek_hotbm_pi<61, double, 63, 63>(double, ap_uint<3>&, ap_ufixed<63, 0, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_ufixed<63, 0, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_int<fp_struct<double>::EXP_BITS>&, int&) because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/src/shared/hls/clib/hlsmath/include/FloatingPoint/hls_range_redux.h:612:45: unsigned int clz<61, 124, 0>(ap_ufixed<124, 0, (ap_q_mode)5, (ap_o_mode)3, 0>) not inlined into void range_redux_payne_hanek_hotbm_pi<61, double, 63, 63>(double, ap_uint<3>&, ap_ufixed<63, 0, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_ufixed<63, 0, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_int<fp_struct<double>::EXP_BITS>&, int&) because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/src/shared/hls/clib/hlsmath/include/FloatingPoint/hls_range_redux.h:440:18: fp_struct<double>::fp_struct(double) not inlined into void range_redux_payne_hanek_hotbm<61, double, 63, 63>(double, ap_uint<3>&, ap_ufixed<63, 0, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_ufixed<63, 0, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_int<fp_struct<double>::EXP_BITS>&) because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/src/shared/hls/clib/hlsmath/include/FloatingPoint/hls_range_redux.h:441:21: fp_struct<double>::expv() const not inlined into void range_redux_payne_hanek_hotbm<61, double, 63, 63>(double, ap_uint<3>&, ap_ufixed<63, 0, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_ufixed<63, 0, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_int<fp_struct<double>::EXP_BITS>&) because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/src/shared/hls/clib/hlsmath/include/FloatingPoint/hls_range_redux.h:495:45: unsigned int clz<61, 124, 0>(ap_ufixed<124, 0, (ap_q_mode)5, (ap_o_mode)3, 0>) not inlined into void range_redux_payne_hanek_hotbm<61, double, 63, 63>(double, ap_uint<3>&, ap_ufixed<63, 0, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_ufixed<63, 0, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_int<fp_struct<double>::EXP_BITS>&) because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/src/shared/hls/clib/hlsmath/include/FloatingPoint/hls_range_redux.h:467:15: ap_uint<(((2) * ((52) + (1))) + (61)) + (3)> table_lookup_4oPi_hotbm<52, 61>(int, double) not inlined into void range_redux_payne_hanek_hotbm<61, double, 63, 63>(double, ap_uint<3>&, ap_ufixed<63, 0, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_ufixed<63, 0, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_int<fp_struct<double>::EXP_BITS>&) because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/src/shared/hls/clib/src/hls/utils/x_hls_utils.h:496:17: fp_struct<double>::data() const not inlined into fp_struct<double>::to_double() const because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/src/shared/hls/clib/src/hls/utils/x_hls_utils.h:510:16: fp_struct<double>::to_double() const not inlined into fp_struct<double>::to_ieee() const because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/src/shared/hls/clib/src/hls/utils/x_hls_float_utils.h:446:18: fp_struct<double>::to_ieee() const not inlined into void scaled_fixed2ieee<63, 1>(ap_ufixed<63, 1, (ap_q_mode)5, (ap_o_mode)3, 0>, double&, int) because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/src/shared/hls/clib/src/hls/utils/x_hls_float_utils.h:443:9: fp_struct<double>::set_mantissa(ap_ufixed<53, 1, (ap_q_mode)5, (ap_o_mode)3, 0>) not inlined into void scaled_fixed2ieee<63, 1>(ap_ufixed<63, 1, (ap_q_mode)5, (ap_o_mode)3, 0>, double&, int) because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/src/shared/hls/clib/src/hls/utils/x_hls_float_utils.h:415:16: clz(int) (.39412) not inlined into void scaled_fixed2ieee<63, 1>(ap_ufixed<63, 1, (ap_q_mode)5, (ap_o_mode)3, 0>, double&, int) because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/src/shared/hls/clib/hlsmath/include/FloatingPoint/hls_hotbm.h:223:15: fp_struct<double>::fp_struct(double) not inlined into double hotbm_::sin_or_cos<double>(double, bool, bool) because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/src/shared/hls/clib/hlsmath/include/FloatingPoint/hls_hotbm.h:237:4: void range_redux_payne_hanek_hotbm_pi<61, double, 63, 63>(double, ap_uint<3>&, ap_ufixed<63, 0, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_ufixed<63, 0, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_int<fp_struct<double>::EXP_BITS>&, int&) not inlined into double hotbm_::sin_or_cos<double>(double, bool, bool) because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/src/shared/hls/clib/hlsmath/include/FloatingPoint/hls_hotbm.h:239:4: void range_redux_payne_hanek_hotbm<61, double, 63, 63>(double, ap_uint<3>&, ap_ufixed<63, 0, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_ufixed<63, 0, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_int<fp_struct<double>::EXP_BITS>&) not inlined into double hotbm_::sin_or_cos<double>(double, bool, bool) because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/src/shared/hls/clib/hlsmath/include/FloatingPoint/hls_hotbm.h:287:20: fp_struct<double>::to_ieee() const not inlined into double hotbm_::sin_or_cos<double>(double, bool, bool) because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/src/shared/hls/clib/hlsmath/include/FloatingPoint/hls_hotbm.h:252:5: void scaled_fixed2ieee<63, 1>(ap_ufixed<63, 1, (ap_q_mode)5, (ap_o_mode)3, 0>, double&, int) not inlined into double hotbm_::sin_or_cos<double>(double, bool, bool) because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/src/shared/hls/clib/hlsmath/include/FloatingPoint/hls_hotbm.h:250:50: ap_ufixed<63, 1, (ap_q_mode)5, (ap_o_mode)3, 0> hotbm_::value_list<double>::sin_or_cos_approximation<63, 63>(bool, ap_uint<3>&, ap_ufixed<63, 0, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_ufixed<63, 0, (ap_q_mode)5, (ap_o_mode)3, 0>&, ap_int<11>&) not inlined into double hotbm_::sin_or_cos<double>(double, bool, bool) because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/src/shared/hls/clib/hlsmath/src/common/hls_hotbm_double.cpp:144:12: double hotbm_::sin_or_cos<double>(double, bool, bool) not inlined into hotbm_::cos(double) because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/src/shared/hls/clib/hlsmath/src/c/sincosdouble.cpp:13:12: hotbm_::cos(double) not inlined into cos because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/src/shared/hls/clib/hlsmath/src/common/hls_hotbm_double.cpp:140:12: double hotbm_::sin_or_cos<double>(double, bool, bool) not inlined into hotbm_::sin(double) because it should never be inlined (cost=never)
remark: /wrk/ci/prod/2024.2/hls_product/continuous/495/2024.2/src/shared/hls/clib/hlsmath/src/c/sincosdouble.cpp:8:12: hotbm_::sin(double) not inlined into sin because it should never be inlined (cost=never)
remark: /opt/xilinx/tools/Vitis/2024.2/common/technology/autopilot/hls_vector.h:109:3: std::array<std::complex<float>, 8ul>::array() not inlined into hls::vector<std::complex<float>, 8ul>::vector() because it should never be inlined (cost=never)
remark: <unknown>:0:0: hls::vector<std::complex<float>, 8ul>::vector() not inlined into hls::stream<hls::vector<std::complex<float>, 8ul>, 0>::read() because it should never be inlined (cost=never)
remark: /opt/xilinx/tools/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/array:186:16: std::__array_traits<std::complex<float>, 8ul>::_S_ref(std::complex<float> const (&) [8], unsigned long) not inlined into std::array<std::complex<float>, 8ul>::operator[](unsigned long) because it should never be inlined (cost=never)
remark: <unknown>:0:0: std::array<std::complex<float>, 8ul>::operator[](unsigned long) not inlined into hls::vector<std::complex<float>, 8ul>::operator[](unsigned long) because it should never be inlined (cost=never)
remark: FFT.cpp:96:35: hls::vector<std::complex<float>, 8ul>::vector() not inlined into reverse_input_stream_UF4(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:321:13: std::array<std::complex<float>, 8ul>::operator[](unsigned long) not inlined into reverse_input_stream_UF4(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:106:27: Inlining function 'ap_uint<8> bit_reverse<8>(ap_uint<8>)' into 'reverse_input_stream_UF4(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&)'
remark: FFT.cpp:456:74: hls::vector<std::complex<float>, 8ul>::vector() not inlined into FFT_Stage1_vectorstream_parameterize(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:459:26: std::array<std::complex<float>, 8ul>::operator[](unsigned long) not inlined into FFT_Stage1_vectorstream_parameterize(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:462:13: Inlining function 'RADIX2_BFLY_double_buffer_quarter_onlycompute(std::complex<float>, std::complex<float>, std::complex<float>&, std::complex<float>&, bool, bool, std::complex<float>)' into 'FFT_Stage1_vectorstream_parameterize(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&)'
remark: FFT.cpp:481:64: hls::vector<std::complex<float>, 8ul>::vector() not inlined into FFT_Stage2_vectorstreamIn_arrayOut_parametize(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, std::complex<float>*) because it should never be inlined (cost=never)
remark: FFT.cpp:487:26: std::array<std::complex<float>, 8ul>::operator[](unsigned long) not inlined into FFT_Stage2_vectorstreamIn_arrayOut_parametize(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, std::complex<float>*) because it should never be inlined (cost=never)
remark: FFT.cpp:492:13: Inlining function 'RADIX2_BFLY_double_buffer_quarter_onlycompute(std::complex<float>, std::complex<float>, std::complex<float>&, std::complex<float>&, bool, bool, std::complex<float>)' into 'FFT_Stage2_vectorstreamIn_arrayOut_parametize(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, std::complex<float>*)'
remark: FFT.cpp:381:2: Inlining function 'RADIX2_BFLY_double_buffer_quarter_CY(std::complex<float>*, std::complex<float>*, int, int, bool, bool, std::complex<float>)' into 'void FFT_stage_spatial_unroll<3>(std::complex<float>*, std::complex<float>*)'
remark: FFT.cpp:381:2: Inlining function 'RADIX2_BFLY_double_buffer_quarter_CY(std::complex<float>*, std::complex<float>*, int, int, bool, bool, std::complex<float>)' into 'void FFT_stage_spatial_unroll<4>(std::complex<float>*, std::complex<float>*)'
remark: FFT.cpp:381:2: Inlining function 'RADIX2_BFLY_double_buffer_quarter_CY(std::complex<float>*, std::complex<float>*, int, int, bool, bool, std::complex<float>)' into 'void FFT_stage_spatial_unroll<5>(std::complex<float>*, std::complex<float>*)'
remark: FFT.cpp:381:2: Inlining function 'RADIX2_BFLY_double_buffer_quarter_CY(std::complex<float>*, std::complex<float>*, int, int, bool, bool, std::complex<float>)' into 'void FFT_stage_spatial_unroll<6>(std::complex<float>*, std::complex<float>*)'
remark: FFT.cpp:381:2: Inlining function 'RADIX2_BFLY_double_buffer_quarter_CY(std::complex<float>*, std::complex<float>*, int, int, bool, bool, std::complex<float>)' into 'void FFT_stage_spatial_unroll<7>(std::complex<float>*, std::complex<float>*)'
remark: FFT.cpp:363:17: Inlining function 'RADIX2_BFLY_double_buffer_quarter_CY(std::complex<float>*, std::complex<float>*, int, int, bool, bool, std::complex<float>)' into 'void FFT_stage_spatial_unroll<8>(std::complex<float>*, std::complex<float>*)'
remark: FFT.cpp:58:35: hls::vector<std::complex<float>, 8ul>::vector() not inlined into output_result_array_to_stream(std::complex<float>*, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:60:13: std::array<std::complex<float>, 8ul>::operator[](unsigned long) not inlined into output_result_array_to_stream(std::complex<float>*, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:531:5: reverse_input_stream_UF4(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) not inlined into FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:532:5: FFT_Stage1_vectorstream_parameterize(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) not inlined into FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:533:5: FFT_Stage2_vectorstreamIn_arrayOut_parametize(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, std::complex<float>*) not inlined into FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:534:5: void FFT_stage_spatial_unroll<3>(std::complex<float>*, std::complex<float>*) not inlined into FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:535:5: void FFT_stage_spatial_unroll<4>(std::complex<float>*, std::complex<float>*) not inlined into FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:536:5: void FFT_stage_spatial_unroll<5>(std::complex<float>*, std::complex<float>*) not inlined into FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:537:5: void FFT_stage_spatial_unroll<6>(std::complex<float>*, std::complex<float>*) not inlined into FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:538:5: void FFT_stage_spatial_unroll<7>(std::complex<float>*, std::complex<float>*) not inlined into FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:539:5: void FFT_stage_spatial_unroll<8>(std::complex<float>*, std::complex<float>*) not inlined into FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:540:5: output_result_array_to_stream(std::complex<float>*, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) not inlined into FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:552:34: cos not inlined into FFT_TOP(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:552:46: sin not inlined into FFT_TOP(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:564:5: FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) not inlined into FFT_TOP(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:59:26: Loop 'VITIS_LOOP_59_1' is marked as complete unroll implied by the pipeline pragma
remark: FFT.cpp:482:27: Loop 'VITIS_LOOP_482_1' is marked as complete unroll implied by the pipeline pragma
remark: FFT.cpp:458:27: Loop 'VITIS_LOOP_458_1' is marked as complete unroll implied by the pipeline pragma
remark: FFT.cpp:320:27: Loop 'VITIS_LOOP_320_6' is marked as complete unroll implied by the pipeline pragma
remark: FFT.cpp:123:20: Loop 'VITIS_LOOP_123_3' is marked as complete unroll implied by the pipeline pragma
remark: FFT.cpp:128:17: Loop 'anonymous' is marked as complete unroll implied by the pipeline pragma
remark: FFT.cpp:130:20: Loop 'VITIS_LOOP_130_4' is marked as complete unroll implied by the pipeline pragma
remark: FFT.cpp:133:24: Loop 'anonymous' is marked as complete unroll implied by the pipeline pragma
remark: FFT.cpp:285:27: Loop 'VITIS_LOOP_285_5' is marked as complete unroll implied by the pipeline pragma
remark: FFT.cpp:100:20: Loop 'VITIS_LOOP_100_1' is marked as complete unroll implied by the pipeline pragma
remark: FFT.cpp:105:20: Loop 'VITIS_LOOP_105_2' is marked as complete unroll implied by the pipeline pragma
remark: FFT.cpp:70:19: Loop 'Loop_Reverse' is marked as complete unroll implied by the pipeline pragma
remark: /opt/xilinx/tools/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/array:94:12: Loop 'anonymous' is marked as complete unroll implied by the pipeline pragma
remark: /opt/xilinx/tools/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/array:94:12: Loop 'anonymous' is marked as complete unroll implied by the pipeline pragma
remark: FFT.cpp:53:0: Unrolling loop 'VITIS_LOOP_59_1' (FFT.cpp:59:26) in function 'output_result_array_to_stream' completely with a factor of 8
remark: FFT.cpp:328:0: Unrolling loop 'R_Group_loop_bflySize_equal_FFT_NUM' (FFT.cpp:353:13) in function 'FFT_stage_spatial_unroll<8>' partially with a factor of 4
remark: FFT.cpp:328:0: Unrolling loop 'R_Group_loop' (FFT.cpp:371:13) in function 'FFT_stage_spatial_unroll<7>' partially with a factor of 4
remark: FFT.cpp:328:0: Unrolling loop 'R_Group_loop' (FFT.cpp:371:13) in function 'FFT_stage_spatial_unroll<6>' partially with a factor of 4
remark: FFT.cpp:328:0: Unrolling loop 'R_Group_loop' (FFT.cpp:371:13) in function 'FFT_stage_spatial_unroll<5>' partially with a factor of 4
remark: FFT.cpp:328:0: Unrolling loop 'R_Group_loop' (FFT.cpp:371:13) in function 'FFT_stage_spatial_unroll<4>' partially with a factor of 4
remark: FFT.cpp:328:0: Unrolling loop 'R_Group_loop' (FFT.cpp:371:13) in function 'FFT_stage_spatial_unroll<3>': changing partial unrolling into complete unrolling since the unrolling factor (=4) is no less than the loop trip count (=4).
remark: FFT.cpp:328:0: Unrolling loop 'R_Group_loop' (FFT.cpp:371:13) in function 'FFT_stage_spatial_unroll<3>' completely with a factor of 4
remark: FFT.cpp:328:0: Pipeline directive for loop 'R_Group_loop' (FFT.cpp:371:13) in function 'FFT_stage_spatial_unroll<3>' has been removed because the loop is unrolled completely
remark: FFT.cpp:475:0: Unrolling loop 'VITIS_LOOP_482_1' (FFT.cpp:482:27) in function 'FFT_Stage2_vectorstreamIn_arrayOut_parametize' completely with a factor of 2
remark: FFT.cpp:448:0: Unrolling loop 'VITIS_LOOP_458_1' (FFT.cpp:458:27) in function 'FFT_Stage1_vectorstream_parameterize' completely with a factor of 4
remark: FFT.cpp:81:0: Unrolling loop 'VITIS_LOOP_320_6' (FFT.cpp:320:27) in function 'reverse_input_stream_UF4' completely with a factor of 8
remark: FFT.cpp:81:0: Unrolling loop 'VITIS_LOOP_123_3' (FFT.cpp:123:20) in function 'reverse_input_stream_UF4' completely with a factor of 8
remark: FFT.cpp:81:0: Unrolling loop 'anonymous' (FFT.cpp:128:17) in function 'reverse_input_stream_UF4' completely with a factor of 8
remark: FFT.cpp:81:0: Unrolling loop 'VITIS_LOOP_130_4' (FFT.cpp:130:20) in function 'reverse_input_stream_UF4' completely with a factor of 8
remark: FFT.cpp:81:0: Unrolling loop 'anonymous' (FFT.cpp:133:24) in function 'reverse_input_stream_UF4' completely with a factor of 8
remark: FFT.cpp:81:0: Unrolling loop 'VITIS_LOOP_285_5' (FFT.cpp:285:27) in function 'reverse_input_stream_UF4' completely with a factor of 8
remark: FFT.cpp:81:0: Unrolling loop 'VITIS_LOOP_100_1' (FFT.cpp:100:20) in function 'reverse_input_stream_UF4' completely with a factor of 8
remark: FFT.cpp:81:0: Unrolling loop 'VITIS_LOOP_105_2' (FFT.cpp:105:20) in function 'reverse_input_stream_UF4' completely with a factor of 8
remark: FFT.cpp:81:0: Unrolling loop 'Loop_Reverse' (FFT.cpp:70:19) in function 'reverse_input_stream_UF4' completely with a factor of 8
remark: FFT.cpp:81:0: Unrolling loop 'Loop_Reverse' (FFT.cpp:70:19) in function 'reverse_input_stream_UF4' completely with a factor of 8
remark: FFT.cpp:81:0: Unrolling loop 'Loop_Reverse' (FFT.cpp:70:19) in function 'reverse_input_stream_UF4' completely with a factor of 8
remark: FFT.cpp:81:0: Unrolling loop 'Loop_Reverse' (FFT.cpp:70:19) in function 'reverse_input_stream_UF4' completely with a factor of 8
remark: FFT.cpp:81:0: Unrolling loop 'Loop_Reverse' (FFT.cpp:70:19) in function 'reverse_input_stream_UF4' completely with a factor of 8
remark: FFT.cpp:81:0: Unrolling loop 'Loop_Reverse' (FFT.cpp:70:19) in function 'reverse_input_stream_UF4' completely with a factor of 8
remark: FFT.cpp:81:0: Unrolling loop 'Loop_Reverse' (FFT.cpp:70:19) in function 'reverse_input_stream_UF4' completely with a factor of 8
remark: FFT.cpp:81:0: Unrolling loop 'Loop_Reverse' (FFT.cpp:70:19) in function 'reverse_input_stream_UF4' completely with a factor of 8
remark: /opt/xilinx/tools/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/array:94:0: Unrolling loop 'anonymous' (/opt/xilinx/tools/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/array:94:12) in function 'std::array<std::complex<float>, 8ul>::array' completely with a factor of 8
remark: /opt/xilinx/tools/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/array:94:0: Unrolling loop 'anonymous' (/opt/xilinx/tools/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/array:94:12) in function 'std::array<std::complex<float>, 8ul>::array' completely with a factor of 8
warning: FFT.cpp:440:13: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:439:13: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:461:39: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:461:28: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:440:13: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:439:13: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:461:39: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:461:28: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:440:13: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:439:13: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:461:39: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:461:28: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:440:13: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:439:13: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:440:13: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:439:13: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:491:61: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:491:50: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:491:39: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:491:28: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:47:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:46:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:47:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:46:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:47:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:46:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:47:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:46:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:47:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:46:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:47:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:46:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:47:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:46:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:47:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:46:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:47:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:46:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:47:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:46:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:47:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:46:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:47:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:46:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:47:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:46:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:47:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:46:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:47:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:46:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:47:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:46:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:47:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:46:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:47:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:46:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:46:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:47:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:46:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:47:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:46:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:47:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:46:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:47:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:46:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:47:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:46:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:47:19: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:439:13: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:440:13: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:439:13: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:440:13: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:491:28: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:491:39: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:491:50: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:491:61: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:439:13: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:440:13: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:461:28: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
warning: FFT.cpp:461:39: Duplicating function 'std::complex<float>::complex(float, float) (.25.28)' as different function signatures were detected between this call site and other call site(s). This may impact the resources used in the design.
remark: /opt/xilinx/tools/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/array:186:16: std::__array_traits<std::complex<float>, 8ul>::_S_ref(std::complex<float> const (&) [8], unsigned long) not inlined into std::array<std::complex<float>, 8ul>::operator[](unsigned long) because it should never be inlined (cost=never)
remark: /opt/xilinx/tools/Vitis/2024.2/common/technology/autopilot/hls_vector.h:109:3: std::array<std::complex<float>, 8ul>::array() not inlined into hls::vector<std::complex<float>, 8ul>::vector() because it should never be inlined (cost=never)
remark: /opt/xilinx/tools/Vitis/2024.2/common/technology/autopilot/hls_vector.h:109:3: std::array<std::complex<float>, 8ul>::array() (.35.41.47) not inlined into hls::vector<std::complex<float>, 8ul>::vector() (.22.32) because it should never be inlined (cost=never)
remark: FFT.cpp:108:53: std::array<std::complex<float>, 8ul>::operator[](unsigned long) not inlined into reverse_input_stream_UF4(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:96:35: hls::vector<std::complex<float>, 8ul>::vector() not inlined into reverse_input_stream_UF4(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:97:23: hls::vector<std::complex<float>, 8ul>::vector() (.22.32) not inlined into reverse_input_stream_UF4(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:456:74: hls::vector<std::complex<float>, 8ul>::vector() not inlined into FFT_Stage1_vectorstream_parameterize(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:459:26: std::array<std::complex<float>, 8ul>::operator[](unsigned long) not inlined into FFT_Stage1_vectorstream_parameterize(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:481:64: hls::vector<std::complex<float>, 8ul>::vector() not inlined into FFT_Stage2_vectorstreamIn_arrayOut_parametize(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, std::complex<float>*) because it should never be inlined (cost=never)
remark: FFT.cpp:487:26: std::array<std::complex<float>, 8ul>::operator[](unsigned long) not inlined into FFT_Stage2_vectorstreamIn_arrayOut_parametize(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, std::complex<float>*) because it should never be inlined (cost=never)
remark: FFT.cpp:58:35: hls::vector<std::complex<float>, 8ul>::vector() not inlined into output_result_array_to_stream(std::complex<float>*, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:60:13: std::array<std::complex<float>, 8ul>::operator[](unsigned long) not inlined into output_result_array_to_stream(std::complex<float>*, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:531:5: reverse_input_stream_UF4(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) not inlined into FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:532:5: FFT_Stage1_vectorstream_parameterize(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) not inlined into FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:533:5: FFT_Stage2_vectorstreamIn_arrayOut_parametize(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, std::complex<float>*) not inlined into FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:534:5: void FFT_stage_spatial_unroll<3>(std::complex<float>*, std::complex<float>*) not inlined into FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:535:5: void FFT_stage_spatial_unroll<4>(std::complex<float>*, std::complex<float>*) not inlined into FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:536:5: void FFT_stage_spatial_unroll<5>(std::complex<float>*, std::complex<float>*) not inlined into FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:537:5: void FFT_stage_spatial_unroll<6>(std::complex<float>*, std::complex<float>*) not inlined into FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:538:5: void FFT_stage_spatial_unroll<7>(std::complex<float>*, std::complex<float>*) not inlined into FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:539:5: void FFT_stage_spatial_unroll<8>(std::complex<float>*, std::complex<float>*) not inlined into FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:540:5: output_result_array_to_stream(std::complex<float>*, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) not inlined into FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:564:5: FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) not inlined into FFT_TOP(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: <unknown>:0:0: FFT_TOP(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) not inlined into apatb_FFT_TOP_ir because it should never be inlined (cost=never)
remark: /opt/xilinx/tools/Vitis/2024.2/tps/lnx64/gcc-8.3.0/lib/gcc/x86_64-pc-linux-gnu/8.3.0/../../../../include/c++/8.3.0/array:186:0: Inlining function 'std::__array_traits<std::complex<float>, 8ul>::_S_ref(std::complex<float> const (&) [8], unsigned long)' into 'std::array<std::complex<float>, 8ul>::operator[](unsigned long)'
remark: /opt/xilinx/tools/Vitis/2024.2/common/technology/autopilot/hls_vector.h:109:0: Inlining function 'std::array<std::complex<float>, 8ul>::array()' into 'hls::vector<std::complex<float>, 8ul>::vector()'
remark: /opt/xilinx/tools/Vitis/2024.2/common/technology/autopilot/hls_vector.h:109:0: Inlining function 'std::array<std::complex<float>, 8ul>::array() (.35.41.47)' into 'hls::vector<std::complex<float>, 8ul>::vector() (.22.32)'
remark: FFT.cpp:81:0: Inlining function 'std::array<std::complex<float>, 8ul>::operator[](unsigned long)' into 'reverse_input_stream_UF4(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&)'
remark: FFT.cpp:81:0: Inlining function 'hls::vector<std::complex<float>, 8ul>::vector()' into 'reverse_input_stream_UF4(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&)'
remark: FFT.cpp:81:0: Inlining function 'hls::vector<std::complex<float>, 8ul>::vector() (.22.32)' into 'reverse_input_stream_UF4(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&)'
remark: FFT.cpp:448:0: Inlining function 'std::array<std::complex<float>, 8ul>::operator[](unsigned long)' into 'FFT_Stage1_vectorstream_parameterize(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&)'
remark: FFT.cpp:448:0: Inlining function 'hls::vector<std::complex<float>, 8ul>::vector()' into 'FFT_Stage1_vectorstream_parameterize(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&)'
remark: FFT.cpp:475:0: Inlining function 'std::array<std::complex<float>, 8ul>::operator[](unsigned long)' into 'FFT_Stage2_vectorstreamIn_arrayOut_parametize(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, std::complex<float>*)'
remark: FFT.cpp:475:0: Inlining function 'hls::vector<std::complex<float>, 8ul>::vector()' into 'FFT_Stage2_vectorstreamIn_arrayOut_parametize(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, std::complex<float>*)'
remark: FFT.cpp:53:0: Inlining function 'std::array<std::complex<float>, 8ul>::operator[](unsigned long)' into 'output_result_array_to_stream(std::complex<float>*, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&)'
remark: FFT.cpp:53:0: Inlining function 'hls::vector<std::complex<float>, 8ul>::vector()' into 'output_result_array_to_stream(std::complex<float>*, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&)'
remark: FFT.cpp:5:0: Applying array_partition to 'twiddles.1': Complete partitioning on dimension 1.
remark: FFT.cpp:5:0: Applying array_partition to 'twiddles.0': Complete partitioning on dimension 1.
remark: FFT.cpp:511:0: Applying array_partition to '_ZZ39FFT_DIT_spatial_unroll_CY_stream_vectorRN3hls6streamINS_6vectorISt7complexIfELm8EEELi0EEES6_E6data_0.1': Cyclic partitioning with factor 8 on dimension 1.
remark: FFT.cpp:511:0: Applying array_partition to '_ZZ39FFT_DIT_spatial_unroll_CY_stream_vectorRN3hls6streamINS_6vectorISt7complexIfELm8EEELi0EEES6_E6data_0.0': Cyclic partitioning with factor 8 on dimension 1.
remark: FFT.cpp:512:0: Applying array_partition to '_ZZ39FFT_DIT_spatial_unroll_CY_stream_vectorRN3hls6streamINS_6vectorISt7complexIfELm8EEELi0EEES6_E6data_1.1': Cyclic partitioning with factor 8 on dimension 1.
remark: FFT.cpp:512:0: Applying array_partition to '_ZZ39FFT_DIT_spatial_unroll_CY_stream_vectorRN3hls6streamINS_6vectorISt7complexIfELm8EEELi0EEES6_E6data_1.0': Cyclic partitioning with factor 8 on dimension 1.
remark: FFT.cpp:513:0: Applying array_partition to '_ZZ39FFT_DIT_spatial_unroll_CY_stream_vectorRN3hls6streamINS_6vectorISt7complexIfELm8EEELi0EEES6_E6data_2.1': Cyclic partitioning with factor 4 on dimension 1.
remark: FFT.cpp:513:0: Applying array_partition to '_ZZ39FFT_DIT_spatial_unroll_CY_stream_vectorRN3hls6streamINS_6vectorISt7complexIfELm8EEELi0EEES6_E6data_2.0': Cyclic partitioning with factor 4 on dimension 1.
remark: FFT.cpp:514:0: Applying array_partition to '_ZZ39FFT_DIT_spatial_unroll_CY_stream_vectorRN3hls6streamINS_6vectorISt7complexIfELm8EEELi0EEES6_E6data_3.1': Cyclic partitioning with factor 4 on dimension 1.
remark: FFT.cpp:514:0: Applying array_partition to '_ZZ39FFT_DIT_spatial_unroll_CY_stream_vectorRN3hls6streamINS_6vectorISt7complexIfELm8EEELi0EEES6_E6data_3.0': Cyclic partitioning with factor 4 on dimension 1.
remark: FFT.cpp:515:0: Applying array_partition to '_ZZ39FFT_DIT_spatial_unroll_CY_stream_vectorRN3hls6streamINS_6vectorISt7complexIfELm8EEELi0EEES6_E6data_4.1': Cyclic partitioning with factor 4 on dimension 1.
remark: FFT.cpp:515:0: Applying array_partition to '_ZZ39FFT_DIT_spatial_unroll_CY_stream_vectorRN3hls6streamINS_6vectorISt7complexIfELm8EEELi0EEES6_E6data_4.0': Cyclic partitioning with factor 4 on dimension 1.
remark: FFT.cpp:516:0: Applying array_partition to '_ZZ39FFT_DIT_spatial_unroll_CY_stream_vectorRN3hls6streamINS_6vectorISt7complexIfELm8EEELi0EEES6_E6data_5.1': Cyclic partitioning with factor 4 on dimension 1.
remark: FFT.cpp:516:0: Applying array_partition to '_ZZ39FFT_DIT_spatial_unroll_CY_stream_vectorRN3hls6streamINS_6vectorISt7complexIfELm8EEELi0EEES6_E6data_5.0': Cyclic partitioning with factor 4 on dimension 1.
remark: FFT.cpp:517:0: Applying array_partition to '_ZZ39FFT_DIT_spatial_unroll_CY_stream_vectorRN3hls6streamINS_6vectorISt7complexIfELm8EEELi0EEES6_E6data_6.1': Cyclic partitioning with factor 4 on dimension 1.
remark: FFT.cpp:517:0: Applying array_partition to '_ZZ39FFT_DIT_spatial_unroll_CY_stream_vectorRN3hls6streamINS_6vectorISt7complexIfELm8EEELi0EEES6_E6data_6.0': Cyclic partitioning with factor 4 on dimension 1.
remark: FFT.cpp:83:20: Applying array_partition to 'data_rev_stream.0': Complete partitioning on dimension 1.
remark: FFT.cpp:83:20: Applying array_partition to 'data_rev_stream.1': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0': Complete partitioning on dimension 1. Cyclic partitioning with factor 4 on dimension 2.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1': Complete partitioning on dimension 1. Cyclic partitioning with factor 4 on dimension 2.
remark: FFT.cpp:126:13: Applying array_partition to 'cyclic_offset': Complete partitioning on dimension 1.
remark: FFT.cpp:529:51: Aggregating fifo (hls::stream) variable 'data_s1_stream_vector' with compact=bit mode in 512-bits
remark: FFT.cpp:528:48: Aggregating fifo (hls::stream) variable 'reverse_in_stream_vector' with compact=bit mode in 512-bits
remark: FFT.cpp:547:0: Aggregating fifo (hls::stream) variable 'out' with compact=bit mode in 512-bits
remark: FFT.cpp:547:0: Aggregating fifo (hls::stream) variable 'in' with compact=bit mode in 512-bits
Estimating recurrent II of function '_llvm.fpga.pack.bits.i512.s_class.hls::vector<std::complex<float>, 8>s' by using CrystalBall: 
Estimating recurrent II of function '_llvm.fpga.unpack.bits.s_class.hls::vector<std::complex<float>, 8>s.i512' by using CrystalBall: 
Estimating recurrent II of loop 'PostP_Fwd_loop' by using CrystalBall:
remark: FFT.cpp:56:9: Inferring pragma 'pipeline II=1' for loop 'PostP_Fwd_loop' (FFT.cpp:55:18) in function 'output_result_array_to_stream' due to performance pragma
remark: FFT.cpp:0:1: pipeline II=1 1 output_result_array_to_stream FFT.cpp:56:9PostP_Fwd_loop FFT.cpp:55:18 
Estimating recurrent II of loop 'R_Group_loop_bflySize_equal_FFT_NUM' by using CrystalBall:
remark: FFT.cpp:356:9: Inferring pragma 'pipeline II=1' for loop 'R_Group_loop_bflySize_equal_FFT_NUM' (FFT.cpp:353:13) in function 'FFT_stage_spatial_unroll<8>' due to performance pragma
remark: FFT.cpp:0:2: pipeline II=1 1 FFT_stage_spatial_unroll<8> FFT.cpp:356:9R_Group_loop_bflySize_equal_FFT_NUM FFT.cpp:353:13 
Estimating recurrent II of loop 'R_Group_loop' by using CrystalBall:
Estimating recurrent II of loop 'R_Group_loop' by using CrystalBall:
Estimating recurrent II of loop 'R_Pair_loop' by using CrystalBall:
remark: FFT.cpp:369:9: Inferring pragma 'pipeline II=1' for loop 'R_Group_loop' (FFT.cpp:371:13) in function 'FFT_stage_spatial_unroll<7>' due to performance pragma
remark: FFT.cpp:0:3: pipeline II=1 1 FFT_stage_spatial_unroll<7> FFT.cpp:369:9R_Group_loop FFT.cpp:371:13 
remark: FFT.cpp:369:9: Inferring pragma 'loop_flatten on' for loop 'R_Group_loop' (FFT.cpp:371:13) in function 'FFT_stage_spatial_unroll<7>' due to performance pragma
remark: FFT.cpp:0:4: loop_flatten on 1 FFT_stage_spatial_unroll<7> FFT.cpp:369:9R_Group_loop FFT.cpp:371:13 
Estimating recurrent II of loop 'R_Group_loop' by using CrystalBall:
Estimating recurrent II of loop 'R_Group_loop' by using CrystalBall:
Estimating recurrent II of loop 'R_Pair_loop' by using CrystalBall:
remark: FFT.cpp:369:9: Inferring pragma 'pipeline II=1' for loop 'R_Group_loop' (FFT.cpp:371:13) in function 'FFT_stage_spatial_unroll<6>' due to performance pragma
remark: FFT.cpp:0:5: pipeline II=1 1 FFT_stage_spatial_unroll<6> FFT.cpp:369:9R_Group_loop FFT.cpp:371:13 
remark: FFT.cpp:369:9: Inferring pragma 'loop_flatten on' for loop 'R_Group_loop' (FFT.cpp:371:13) in function 'FFT_stage_spatial_unroll<6>' due to performance pragma
remark: FFT.cpp:0:6: loop_flatten on 1 FFT_stage_spatial_unroll<6> FFT.cpp:369:9R_Group_loop FFT.cpp:371:13 
Estimating recurrent II of loop 'R_Group_loop' by using CrystalBall:
Estimating recurrent II of loop 'R_Group_loop' by using CrystalBall:
Estimating recurrent II of loop 'R_Pair_loop' by using CrystalBall:
remark: FFT.cpp:369:9: Inferring pragma 'pipeline II=1' for loop 'R_Group_loop' (FFT.cpp:371:13) in function 'FFT_stage_spatial_unroll<5>' due to performance pragma
remark: FFT.cpp:0:7: pipeline II=1 1 FFT_stage_spatial_unroll<5> FFT.cpp:369:9R_Group_loop FFT.cpp:371:13 
remark: FFT.cpp:369:9: Inferring pragma 'loop_flatten on' for loop 'R_Group_loop' (FFT.cpp:371:13) in function 'FFT_stage_spatial_unroll<5>' due to performance pragma
remark: FFT.cpp:0:8: loop_flatten on 1 FFT_stage_spatial_unroll<5> FFT.cpp:369:9R_Group_loop FFT.cpp:371:13 
Estimating recurrent II of loop 'R_Group_loop' by using CrystalBall:
Estimating recurrent II of loop 'R_Group_loop' by using CrystalBall:
Estimating recurrent II of loop 'R_Pair_loop' by using CrystalBall:
remark: FFT.cpp:369:9: Inferring pragma 'pipeline II=1' for loop 'R_Group_loop' (FFT.cpp:371:13) in function 'FFT_stage_spatial_unroll<4>' due to performance pragma
remark: FFT.cpp:0:9: pipeline II=1 1 FFT_stage_spatial_unroll<4> FFT.cpp:369:9R_Group_loop FFT.cpp:371:13 
remark: FFT.cpp:369:9: Inferring pragma 'loop_flatten on' for loop 'R_Group_loop' (FFT.cpp:371:13) in function 'FFT_stage_spatial_unroll<4>' due to performance pragma
remark: FFT.cpp:0:10: loop_flatten on 1 FFT_stage_spatial_unroll<4> FFT.cpp:369:9R_Group_loop FFT.cpp:371:13 
Estimating recurrent II of loop 'R_Pair_loop' by using CrystalBall:
remark: FFT.cpp:369:9: Inferring pragma 'pipeline II=1' for loop 'R_Pair_loop' (FFT.cpp:368:9) in function 'FFT_stage_spatial_unroll<3>' due to performance pragma
remark: FFT.cpp:0:11: pipeline II=1 1 FFT_stage_spatial_unroll<3> FFT.cpp:369:9R_Pair_loop FFT.cpp:368:9 
Estimating recurrent II of loop 'FFT_Stage2' by using CrystalBall:
remark: FFT.cpp:479:9: Inferring pragma 'pipeline II=1' for loop 'FFT_Stage2' (FFT.cpp:478:13) in function 'FFT_Stage2_vectorstreamIn_arrayOut_parametize' due to performance pragma
remark: FFT.cpp:0:12: pipeline II=1 1 FFT_Stage2_vectorstreamIn_arrayOut_parametize FFT.cpp:479:9FFT_Stage2 FFT.cpp:478:13 
remark: FFT.cpp:450:9: Cannot apply performance pragma for function 'FFT_Stage1_vectorstream_parameterize(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&)' (FFT.cpp:448)because dataflow pragma takes precedence
Estimating recurrent II of loop 'FFT_Stage1' by using CrystalBall:
remark: FFT.cpp:452:9: Inferring pragma 'pipeline II=1' for loop 'FFT_Stage1' (FFT.cpp:451:14) in function 'FFT_Stage1_vectorstream_parameterize' due to performance pragma
remark: FFT.cpp:0:13: pipeline II=1 1 FFT_Stage1_vectorstream_parameterize FFT.cpp:452:9FFT_Stage1 FFT.cpp:451:14 
Estimating recurrent II of loop 'arrayctor.loop5' by using CrystalBall:
Estimating recurrent II of loop 'arrayctor.loop18' by using CrystalBall:
Estimating recurrent II of loop 'READ_STREAM_INPUT' by using CrystalBall:
Estimating recurrent II of loop 'FROM_BLOCK_TO_CYCLIC' by using CrystalBall:
Estimating recurrent II of loop 'STREAM_OUT_REVERSE' by using CrystalBall:
remark: FFT.cpp:318:9: Inferring pragma 'pipeline II=1' for loop 'STREAM_OUT_REVERSE' (FFT.cpp:316:25) in function 'reverse_input_stream_UF4' due to performance pragma
remark: FFT.cpp:0:14: pipeline II=1 1 reverse_input_stream_UF4 FFT.cpp:318:9STREAM_OUT_REVERSE FFT.cpp:316:25 
remark: FFT.cpp:120:9: Inferring pragma 'pipeline II=1' for loop 'FROM_BLOCK_TO_CYCLIC' (FFT.cpp:118:27) in function 'reverse_input_stream_UF4' due to performance pragma
remark: FFT.cpp:0:15: pipeline II=1 1 reverse_input_stream_UF4 FFT.cpp:120:9FROM_BLOCK_TO_CYCLIC FFT.cpp:118:27 
remark: FFT.cpp:95:9: Inferring pragma 'pipeline II=1' for loop 'READ_STREAM_INPUT' (FFT.cpp:93:24) in function 'reverse_input_stream_UF4' due to performance pragma
remark: FFT.cpp:0:16: pipeline II=1 1 reverse_input_stream_UF4 FFT.cpp:95:9READ_STREAM_INPUT FFT.cpp:93:24 
remark: FFT.cpp:89:9: Inferring pragma 'unroll' for loop 'STREAM_OUT_REVERSE' (FFT.cpp:316:25) in function 'reverse_input_stream_UF4' due to performance pragma
remark: FFT.cpp:0:17: unroll COMPLETE 1 reverse_input_stream_UF4 FFT.cpp:89:9STREAM_OUT_REVERSE FFT.cpp:316:25 
remark: FFT.cpp:89:9: Inferring pragma 'unroll' for loop 'FROM_BLOCK_TO_CYCLIC' (FFT.cpp:118:27) in function 'reverse_input_stream_UF4' due to performance pragma
remark: FFT.cpp:0:18: unroll COMPLETE 1 reverse_input_stream_UF4 FFT.cpp:89:9FROM_BLOCK_TO_CYCLIC FFT.cpp:118:27 
remark: FFT.cpp:89:9: Inferring pragma 'unroll' for loop 'READ_STREAM_INPUT' (FFT.cpp:93:24) in function 'reverse_input_stream_UF4' due to performance pragma
remark: FFT.cpp:0:19: unroll COMPLETE 1 reverse_input_stream_UF4 FFT.cpp:89:9READ_STREAM_INPUT FFT.cpp:93:24 
remark: FFT.cpp:89:9: Inferring pragma 'unroll' for loop 'anonymous' (FFT.cpp:84:20) in function 'reverse_input_stream_UF4' due to performance pragma
remark: FFT.cpp:0:20: unroll COMPLETE 1 reverse_input_stream_UF4 FFT.cpp:89:9anonymous FFT.cpp:84:20 
remark: FFT.cpp:89:9: Inferring pragma 'unroll' for loop 'anonymous' (FFT.cpp:84:20) in function 'reverse_input_stream_UF4' due to performance pragma
remark: FFT.cpp:0:21: unroll COMPLETE 1 reverse_input_stream_UF4 FFT.cpp:89:9anonymous FFT.cpp:84:20 
remark: FFT.cpp:89:9: Inferring pragma 'unroll' for loop 'anonymous' (FFT.cpp:83:20) in function 'reverse_input_stream_UF4' due to performance pragma
remark: FFT.cpp:0:22: unroll COMPLETE 1 reverse_input_stream_UF4 FFT.cpp:89:9anonymous FFT.cpp:83:20 
remark: FFT.cpp:89:9: Inferring pragma 'unroll' for loop 'anonymous' (FFT.cpp:83:20) in function 'reverse_input_stream_UF4' due to performance pragma
remark: FFT.cpp:0:23: unroll COMPLETE 1 reverse_input_stream_UF4 FFT.cpp:89:9anonymous FFT.cpp:83:20 
remark: FFT.cpp:509:9: Cannot apply performance pragma for function 'FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&)' (FFT.cpp:506)because dataflow pragma takes precedence
Estimating recurrent II of function '_llvm.fpga.pack.bits.i512.s_class.hls::stream<hls::vector<std::complex<float>, 8>, 0>s' by using CrystalBall: 
Estimating recurrent II of function '_llvm.fpga.unpack.bits.s_class.hls::stream<hls::vector<std::complex<float>, 8>, 0>s.i512' by using CrystalBall: 
remark: FFT.cpp:81:0: Unrolling loop 'STREAM_OUT_REVERSE' (FFT.cpp:316:25) in function 'reverse_input_stream_UF4' completely with a factor of 32
remark: FFT.cpp:81:0: Dropping performance directive for loop 'STREAM_OUT_REVERSE' (FFT.cpp:316:25) in function 'reverse_input_stream_UF4' because the loop is unrolled completely
remark: FFT.cpp:81:0: Unrolling loop 'FROM_BLOCK_TO_CYCLIC' (FFT.cpp:118:27) in function 'reverse_input_stream_UF4' completely with a factor of 32
remark: FFT.cpp:81:0: Dropping performance directive for loop 'FROM_BLOCK_TO_CYCLIC' (FFT.cpp:118:27) in function 'reverse_input_stream_UF4' because the loop is unrolled completely
remark: FFT.cpp:81:0: Unrolling loop 'READ_STREAM_INPUT' (FFT.cpp:93:24) in function 'reverse_input_stream_UF4' completely with a factor of 32
remark: FFT.cpp:81:0: Dropping performance directive for loop 'READ_STREAM_INPUT' (FFT.cpp:93:24) in function 'reverse_input_stream_UF4' because the loop is unrolled completely
remark: FFT.cpp:81:0: Unrolling loop 'anonymous' (FFT.cpp:84:20) in function 'reverse_input_stream_UF4' completely with a factor of 8
remark: FFT.cpp:81:0: Unrolling loop 'anonymous' (FFT.cpp:84:20) in function 'reverse_input_stream_UF4' completely with a factor of 32
remark: FFT.cpp:81:0: Unrolling loop 'anonymous' (FFT.cpp:84:20) in function 'reverse_input_stream_UF4' completely with a factor of 32
remark: FFT.cpp:81:0: Unrolling loop 'anonymous' (FFT.cpp:84:20) in function 'reverse_input_stream_UF4' completely with a factor of 32
remark: FFT.cpp:81:0: Unrolling loop 'anonymous' (FFT.cpp:84:20) in function 'reverse_input_stream_UF4' completely with a factor of 32
remark: FFT.cpp:81:0: Unrolling loop 'anonymous' (FFT.cpp:84:20) in function 'reverse_input_stream_UF4' completely with a factor of 32
remark: FFT.cpp:81:0: Unrolling loop 'anonymous' (FFT.cpp:84:20) in function 'reverse_input_stream_UF4' completely with a factor of 32
remark: FFT.cpp:81:0: Unrolling loop 'anonymous' (FFT.cpp:84:20) in function 'reverse_input_stream_UF4' completely with a factor of 32
remark: FFT.cpp:81:0: Unrolling loop 'anonymous' (FFT.cpp:84:20) in function 'reverse_input_stream_UF4' completely with a factor of 32
remark: FFT.cpp:81:0: Unrolling loop 'anonymous' (FFT.cpp:83:20) in function 'reverse_input_stream_UF4' completely with a factor of 8
remark: FFT.cpp:81:0: Unrolling loop 'anonymous' (FFT.cpp:83:20) in function 'reverse_input_stream_UF4' completely with a factor of 32
remark: FFT.cpp:81:0: Unrolling loop 'anonymous' (FFT.cpp:83:20) in function 'reverse_input_stream_UF4' completely with a factor of 32
remark: FFT.cpp:81:0: Unrolling loop 'anonymous' (FFT.cpp:83:20) in function 'reverse_input_stream_UF4' completely with a factor of 32
remark: FFT.cpp:81:0: Unrolling loop 'anonymous' (FFT.cpp:83:20) in function 'reverse_input_stream_UF4' completely with a factor of 32
remark: FFT.cpp:81:0: Unrolling loop 'anonymous' (FFT.cpp:83:20) in function 'reverse_input_stream_UF4' completely with a factor of 32
remark: FFT.cpp:81:0: Unrolling loop 'anonymous' (FFT.cpp:83:20) in function 'reverse_input_stream_UF4' completely with a factor of 32
remark: FFT.cpp:81:0: Unrolling loop 'anonymous' (FFT.cpp:83:20) in function 'reverse_input_stream_UF4' completely with a factor of 32
remark: FFT.cpp:81:0: Unrolling loop 'anonymous' (FFT.cpp:83:20) in function 'reverse_input_stream_UF4' completely with a factor of 32
Estimating recurrent II of function '_llvm.fpga.pack.bits.i512.s_class.hls::vector<std::complex<float>, 8>s' by using CrystalBall: 
Estimating recurrent II of function '_llvm.fpga.unpack.bits.s_class.hls::vector<std::complex<float>, 8>s.i512' by using CrystalBall: 
Estimating recurrent II of loop 'PostP_Fwd_loop' by using CrystalBall:
Estimating recurrent II of loop 'R_Group_loop_bflySize_equal_FFT_NUM' by using CrystalBall:
Estimating recurrent II of loop 'R_Group_loop' by using CrystalBall:
Estimating recurrent II of loop 'R_Group_loop' by using CrystalBall:
Estimating recurrent II of loop 'R_Group_loop' by using CrystalBall:
Estimating recurrent II of loop 'R_Group_loop' by using CrystalBall:
Estimating recurrent II of loop 'R_Pair_loop' by using CrystalBall:
Estimating recurrent II of loop 'FFT_Stage2' by using CrystalBall:
Estimating recurrent II of loop 'FFT_Stage1' by using CrystalBall:
Estimating recurrent II of function 'reverse_input_stream_UF4' by using CrystalBall: 
remark: FFT.cpp:81:0: Inferring pragma 'pipeline' for function 'reverse_input_stream_UF4' due to performance pragma
remark: FFT.cpp:81:0: pipeline II=-1 1 reverse_input_stream_UF4 FFT.cpp:89:9
Estimating recurrent II of function '_llvm.fpga.pack.bits.i512.s_class.hls::stream<hls::vector<std::complex<float>, 8>, 0>s' by using CrystalBall: 
Estimating recurrent II of function '_llvm.fpga.unpack.bits.s_class.hls::stream<hls::vector<std::complex<float>, 8>, 0>s.i512' by using CrystalBall: 
remark: FFT.cpp:81:0: Inferring pragma 'pipeline II=32' for function 'reverse_input_stream_UF4' due to performance pragma
remark: FFT.cpp:81:0: pipeline II=32 1 reverse_input_stream_UF4 FFT.cpp:89:9
remark: FFT.cpp:83:20: Automatically partitioning array 'data_rev_stream' dimension 1 completely based on constant index.
remark: FFT.cpp:83:20: Automatically partitioning array 'data_rev_stream' dimension 1 completely based on constant index.
remark: FFT.cpp:83:20: Automatically partitioning array 'data_rev_stream' dimension 1 completely based on constant index.
remark: FFT.cpp:83:20: Automatically partitioning array 'data_rev_stream' dimension 1 completely based on constant index.
remark: FFT.cpp:83:20: Automatically partitioning array 'data_rev_stream' dimension 1 completely based on constant index.
remark: FFT.cpp:83:20: Automatically partitioning array 'data_rev_stream' dimension 1 completely based on constant index.
remark: FFT.cpp:83:20: Automatically partitioning array 'data_rev_stream' dimension 1 completely based on constant index.
remark: FFT.cpp:83:20: Automatically partitioning array 'data_rev_stream' dimension 1 completely based on constant index.
remark: FFT.cpp:83:20: Automatically partitioning array 'data_rev_stream' dimension 1 completely based on constant index.
remark: FFT.cpp:83:20: Automatically partitioning array 'data_rev_stream' dimension 1 completely based on constant index.
remark: FFT.cpp:83:20: Automatically partitioning array 'data_rev_stream' dimension 1 completely based on constant index.
remark: FFT.cpp:83:20: Automatically partitioning array 'data_rev_stream' dimension 1 completely based on constant index.
remark: FFT.cpp:83:20: Automatically partitioning array 'data_rev_stream' dimension 1 completely based on constant index.
remark: FFT.cpp:83:20: Automatically partitioning array 'data_rev_stream' dimension 1 completely based on constant index.
remark: FFT.cpp:83:20: Automatically partitioning array 'data_rev_stream' dimension 1 completely based on constant index.
remark: FFT.cpp:83:20: Automatically partitioning array 'data_rev_stream' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:84:20: Automatically partitioning array 'data_in_cyclic' dimension 1 completely based on constant index.
remark: FFT.cpp:83:20: array_partition dim=1 type=complete  variable=data_rev_stream.0_0 1 reverse_input_stream_UF4 FFT.cpp:83:20 data_rev_stream.0_0 
remark: FFT.cpp:83:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_rev_stream.0_0' due to pipeline pragma
remark: FFT.cpp:83:20: array_partition dim=1 type=complete  variable=data_rev_stream.0_1 1 reverse_input_stream_UF4 FFT.cpp:83:20 data_rev_stream.0_1 
remark: FFT.cpp:83:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_rev_stream.0_1' due to pipeline pragma
remark: FFT.cpp:83:20: array_partition dim=1 type=complete  variable=data_rev_stream.0_2 1 reverse_input_stream_UF4 FFT.cpp:83:20 data_rev_stream.0_2 
remark: FFT.cpp:83:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_rev_stream.0_2' due to pipeline pragma
remark: FFT.cpp:83:20: array_partition dim=1 type=complete  variable=data_rev_stream.0_3 1 reverse_input_stream_UF4 FFT.cpp:83:20 data_rev_stream.0_3 
remark: FFT.cpp:83:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_rev_stream.0_3' due to pipeline pragma
remark: FFT.cpp:83:20: array_partition dim=1 type=complete  variable=data_rev_stream.0_4 1 reverse_input_stream_UF4 FFT.cpp:83:20 data_rev_stream.0_4 
remark: FFT.cpp:83:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_rev_stream.0_4' due to pipeline pragma
remark: FFT.cpp:83:20: array_partition dim=1 type=complete  variable=data_rev_stream.0_5 1 reverse_input_stream_UF4 FFT.cpp:83:20 data_rev_stream.0_5 
remark: FFT.cpp:83:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_rev_stream.0_5' due to pipeline pragma
remark: FFT.cpp:83:20: array_partition dim=1 type=complete  variable=data_rev_stream.0_6 1 reverse_input_stream_UF4 FFT.cpp:83:20 data_rev_stream.0_6 
remark: FFT.cpp:83:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_rev_stream.0_6' due to pipeline pragma
remark: FFT.cpp:83:20: array_partition dim=1 type=complete  variable=data_rev_stream.0_7 1 reverse_input_stream_UF4 FFT.cpp:83:20 data_rev_stream.0_7 
remark: FFT.cpp:83:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_rev_stream.0_7' due to pipeline pragma
remark: FFT.cpp:83:20: array_partition dim=1 type=complete  variable=data_rev_stream.1_0 1 reverse_input_stream_UF4 FFT.cpp:83:20 data_rev_stream.1_0 
remark: FFT.cpp:83:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_rev_stream.1_0' due to pipeline pragma
remark: FFT.cpp:83:20: array_partition dim=1 type=complete  variable=data_rev_stream.1_1 1 reverse_input_stream_UF4 FFT.cpp:83:20 data_rev_stream.1_1 
remark: FFT.cpp:83:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_rev_stream.1_1' due to pipeline pragma
remark: FFT.cpp:83:20: array_partition dim=1 type=complete  variable=data_rev_stream.1_2 1 reverse_input_stream_UF4 FFT.cpp:83:20 data_rev_stream.1_2 
remark: FFT.cpp:83:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_rev_stream.1_2' due to pipeline pragma
remark: FFT.cpp:83:20: array_partition dim=1 type=complete  variable=data_rev_stream.1_3 1 reverse_input_stream_UF4 FFT.cpp:83:20 data_rev_stream.1_3 
remark: FFT.cpp:83:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_rev_stream.1_3' due to pipeline pragma
remark: FFT.cpp:83:20: array_partition dim=1 type=complete  variable=data_rev_stream.1_4 1 reverse_input_stream_UF4 FFT.cpp:83:20 data_rev_stream.1_4 
remark: FFT.cpp:83:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_rev_stream.1_4' due to pipeline pragma
remark: FFT.cpp:83:20: array_partition dim=1 type=complete  variable=data_rev_stream.1_5 1 reverse_input_stream_UF4 FFT.cpp:83:20 data_rev_stream.1_5 
remark: FFT.cpp:83:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_rev_stream.1_5' due to pipeline pragma
remark: FFT.cpp:83:20: array_partition dim=1 type=complete  variable=data_rev_stream.1_6 1 reverse_input_stream_UF4 FFT.cpp:83:20 data_rev_stream.1_6 
remark: FFT.cpp:83:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_rev_stream.1_6' due to pipeline pragma
remark: FFT.cpp:83:20: array_partition dim=1 type=complete  variable=data_rev_stream.1_7 1 reverse_input_stream_UF4 FFT.cpp:83:20 data_rev_stream.1_7 
remark: FFT.cpp:83:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_rev_stream.1_7' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_0_0 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_0_0 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_0_0' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_0_1 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_0_1 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_0_1' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_0_2 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_0_2 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_0_2' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_0_3 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_0_3 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_0_3' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_1_0 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_1_0 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_1_0' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_1_1 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_1_1 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_1_1' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_1_2 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_1_2 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_1_2' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_1_3 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_1_3 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_1_3' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_2_0 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_2_0 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_2_0' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_2_1 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_2_1 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_2_1' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_2_2 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_2_2 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_2_2' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_2_3 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_2_3 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_2_3' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_3_0 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_3_0 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_3_0' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_3_1 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_3_1 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_3_1' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_3_2 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_3_2 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_3_2' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_3_3 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_3_3 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_3_3' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_4_0 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_4_0 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_4_0' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_4_1 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_4_1 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_4_1' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_4_2 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_4_2 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_4_2' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_4_3 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_4_3 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_4_3' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_5_0 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_5_0 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_5_0' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_5_1 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_5_1 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_5_1' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_5_2 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_5_2 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_5_2' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_5_3 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_5_3 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_5_3' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_6_0 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_6_0 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_6_0' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_6_1 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_6_1 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_6_1' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_6_2 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_6_2 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_6_2' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_6_3 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_6_3 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_6_3' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_7_0 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_7_0 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_7_0' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_7_1 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_7_1 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_7_1' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_7_2 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_7_2 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_7_2' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.0_7_3 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.0_7_3 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.0_7_3' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_0_0 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_0_0 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_0_0' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_0_1 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_0_1 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_0_1' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_0_2 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_0_2 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_0_2' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_0_3 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_0_3 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_0_3' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_1_0 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_1_0 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_1_0' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_1_1 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_1_1 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_1_1' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_1_2 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_1_2 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_1_2' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_1_3 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_1_3 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_1_3' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_2_0 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_2_0 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_2_0' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_2_1 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_2_1 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_2_1' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_2_2 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_2_2 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_2_2' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_2_3 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_2_3 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_2_3' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_3_0 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_3_0 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_3_0' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_3_1 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_3_1 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_3_1' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_3_2 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_3_2 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_3_2' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_3_3 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_3_3 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_3_3' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_4_0 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_4_0 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_4_0' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_4_1 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_4_1 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_4_1' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_4_2 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_4_2 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_4_2' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_4_3 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_4_3 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_4_3' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_5_0 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_5_0 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_5_0' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_5_1 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_5_1 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_5_1' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_5_2 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_5_2 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_5_2' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_5_3 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_5_3 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_5_3' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_6_0 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_6_0 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_6_0' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_6_1 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_6_1 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_6_1' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_6_2 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_6_2 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_6_2' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_6_3 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_6_3 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_6_3' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_7_0 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_7_0 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_7_0' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_7_1 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_7_1 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_7_1' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_7_2 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_7_2 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_7_2' due to pipeline pragma
remark: FFT.cpp:84:20: array_partition dim=1 type=complete  variable=data_in_cyclic.1_7_3 1 reverse_input_stream_UF4 FFT.cpp:84:20 data_in_cyclic.1_7_3 
remark: FFT.cpp:84:20: Inferring pragma 'array_partition type=complete dim=1' for array 'data_in_cyclic.1_7_3' due to pipeline pragma
remark: FFT.cpp:83:20: Applying array_partition to 'data_rev_stream.0_0': Complete partitioning on dimension 1.
remark: FFT.cpp:83:20: Applying array_partition to 'data_rev_stream.0_1': Complete partitioning on dimension 1.
remark: FFT.cpp:83:20: Applying array_partition to 'data_rev_stream.0_2': Complete partitioning on dimension 1.
remark: FFT.cpp:83:20: Applying array_partition to 'data_rev_stream.0_3': Complete partitioning on dimension 1.
remark: FFT.cpp:83:20: Applying array_partition to 'data_rev_stream.0_4': Complete partitioning on dimension 1.
remark: FFT.cpp:83:20: Applying array_partition to 'data_rev_stream.0_5': Complete partitioning on dimension 1.
remark: FFT.cpp:83:20: Applying array_partition to 'data_rev_stream.0_6': Complete partitioning on dimension 1.
remark: FFT.cpp:83:20: Applying array_partition to 'data_rev_stream.0_7': Complete partitioning on dimension 1.
remark: FFT.cpp:83:20: Applying array_partition to 'data_rev_stream.1_0': Complete partitioning on dimension 1.
remark: FFT.cpp:83:20: Applying array_partition to 'data_rev_stream.1_1': Complete partitioning on dimension 1.
remark: FFT.cpp:83:20: Applying array_partition to 'data_rev_stream.1_2': Complete partitioning on dimension 1.
remark: FFT.cpp:83:20: Applying array_partition to 'data_rev_stream.1_3': Complete partitioning on dimension 1.
remark: FFT.cpp:83:20: Applying array_partition to 'data_rev_stream.1_4': Complete partitioning on dimension 1.
remark: FFT.cpp:83:20: Applying array_partition to 'data_rev_stream.1_5': Complete partitioning on dimension 1.
remark: FFT.cpp:83:20: Applying array_partition to 'data_rev_stream.1_6': Complete partitioning on dimension 1.
remark: FFT.cpp:83:20: Applying array_partition to 'data_rev_stream.1_7': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_0_0': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_0_1': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_0_2': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_0_3': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_1_0': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_1_1': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_1_2': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_1_3': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_2_0': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_2_1': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_2_2': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_2_3': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_3_0': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_3_1': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_3_2': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_3_3': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_4_0': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_4_1': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_4_2': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_4_3': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_5_0': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_5_1': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_5_2': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_5_3': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_6_0': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_6_1': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_6_2': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_6_3': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_7_0': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_7_1': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_7_2': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.0_7_3': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_0_0': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_0_1': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_0_2': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_0_3': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_1_0': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_1_1': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_1_2': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_1_3': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_2_0': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_2_1': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_2_2': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_2_3': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_3_0': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_3_1': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_3_2': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_3_3': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_4_0': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_4_1': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_4_2': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_4_3': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_5_0': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_5_1': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_5_2': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_5_3': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_6_0': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_6_1': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_6_2': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_6_3': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_7_0': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_7_1': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_7_2': Complete partitioning on dimension 1.
remark: FFT.cpp:84:20: Applying array_partition to 'data_in_cyclic.1_7_3': Complete partitioning on dimension 1.
remark: FFT.cpp:451:14: Changing loop 'FFT_Stage1_vectorstream_parameterize_Loop_FFT_Stage1_proc' (FFT.cpp:451:14) to a process function for dataflow in function 'FFT_Stage1_vectorstream_parameterize'
remark: FFT.cpp:451:23: FFT_Stage1_vectorstream_parameterize_Loop_FFT_Stage1_proc not inlined into FFT_Stage1_vectorstream_parameterize(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:531:5: reverse_input_stream_UF4(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) not inlined into FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:532:5: FFT_Stage1_vectorstream_parameterize(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) not inlined into FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:533:5: FFT_Stage2_vectorstreamIn_arrayOut_parametize(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, std::complex<float>*) not inlined into FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:534:5: void FFT_stage_spatial_unroll<3>(std::complex<float>*, std::complex<float>*) not inlined into FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:535:5: void FFT_stage_spatial_unroll<4>(std::complex<float>*, std::complex<float>*) not inlined into FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:536:5: void FFT_stage_spatial_unroll<5>(std::complex<float>*, std::complex<float>*) not inlined into FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:537:5: void FFT_stage_spatial_unroll<6>(std::complex<float>*, std::complex<float>*) not inlined into FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:538:5: void FFT_stage_spatial_unroll<7>(std::complex<float>*, std::complex<float>*) not inlined into FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:539:5: void FFT_stage_spatial_unroll<8>(std::complex<float>*, std::complex<float>*) not inlined into FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:540:5: output_result_array_to_stream(std::complex<float>*, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) not inlined into FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
remark: FFT.cpp:564:5: FFT_DIT_spatial_unroll_CY_stream_vector(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) not inlined into FFT_TOP(hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&, hls::stream<hls::vector<std::complex<float>, 8ul>, 0>&) because it should never be inlined (cost=never)
===-------------------------------------------------------------------------===
                         Miscellaneous Ungrouped Timers
===-------------------------------------------------------------------------===

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
  11.4452 (100.0%)   0.5003 (100.0%)  11.9455 (100.0%)  11.9466 (100.0%)  Code Generation Time
  11.4452 (100.0%)   0.5003 (100.0%)  11.9455 (100.0%)  11.9466 (100.0%)  Total

===-------------------------------------------------------------------------===
                      ... Pass execution timing report ...
===-------------------------------------------------------------------------===
  Total Execution Time: 12.9341 seconds (12.9326 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   6.2701 ( 50.5%)   0.2519 ( 49.7%)   6.5221 ( 50.4%)   6.5227 ( 50.4%)   automatic parallel and pipeline insertion based performance constraint
   0.9019 (  7.3%)   0.0238 (  4.7%)   0.9257 (  7.2%)   0.9257 (  7.2%)  ROM inference pass
   0.7455 (  6.0%)   0.0000 (  0.0%)   0.7455 (  5.8%)   0.7456 (  5.8%)  Loop Invariant Code Motion
   0.4007 (  3.2%)   0.0078 (  1.5%)   0.4085 (  3.2%)   0.4086 (  3.2%)  Global Value Numbering
   0.2056 (  1.7%)   0.0001 (  0.0%)   0.2056 (  1.6%)   0.2056 (  1.6%)  Dead Store Elimination
   0.1959 (  1.6%)   0.0040 (  0.8%)   0.1999 (  1.5%)   0.1999 (  1.5%)  Reflow pragma unroll loops
   0.1840 (  1.5%)   0.0046 (  0.9%)   0.1886 (  1.5%)   0.1886 (  1.5%)  Dead Store Elimination
   0.1732 (  1.4%)   0.0039 (  0.8%)   0.1772 (  1.4%)   0.1770 (  1.4%)  Inliner for always_inline functions
   0.1673 (  1.3%)   0.0000 (  0.0%)   0.1673 (  1.3%)   0.1673 (  1.3%)  Object Decomposition
   0.1598 (  1.3%)   0.0000 (  0.0%)   0.1598 (  1.2%)   0.1598 (  1.2%)  Combine redundant instructions
   0.1499 (  1.2%)   0.0000 (  0.0%)   0.1499 (  1.2%)   0.1499 (  1.2%)  Dead Store Elimination
   0.1415 (  1.1%)   0.0000 (  0.0%)   0.1415 (  1.1%)   0.1415 (  1.1%)  Dead Store Elimination
   0.0330 (  0.3%)   0.0799 ( 15.7%)   0.1129 (  0.9%)   0.1129 (  0.9%)  Auto automatic array partition analysis
   0.0772 (  0.6%)   0.0000 (  0.0%)   0.0772 (  0.6%)   0.0772 (  0.6%)  Loop Invariant Code Motion
   0.0768 (  0.6%)   0.0000 (  0.0%)   0.0768 (  0.6%)   0.0768 (  0.6%)  ArrayPartition - Partition Arrays into Banks
   0.0762 (  0.6%)   0.0000 (  0.0%)   0.0762 (  0.6%)   0.0762 (  0.6%)  Loop Invariant Code Motion
   0.0125 (  0.1%)   0.0599 ( 11.8%)   0.0724 (  0.6%)   0.0724 (  0.6%)  Auto automatic array partition analysis
   0.0694 (  0.6%)   0.0000 (  0.0%)   0.0694 (  0.5%)   0.0694 (  0.5%)  Generate HLS compatible IR
   0.0680 (  0.5%)   0.0000 (  0.0%)   0.0680 (  0.5%)   0.0680 (  0.5%)  Build loop flatten cost model
   0.0599 (  0.5%)   0.0000 (  0.0%)   0.0599 (  0.5%)   0.0600 (  0.5%)  Automatic array partition transformation
   0.0410 (  0.3%)   0.0000 (  0.0%)   0.0410 (  0.3%)   0.0409 (  0.3%)  PredicateAnalyzer - Predidate Analysis
   0.0345 (  0.3%)   0.0015 (  0.3%)   0.0360 (  0.3%)   0.0360 (  0.3%)  Global Value Numbering
   0.0341 (  0.3%)   0.0000 (  0.0%)   0.0341 (  0.3%)   0.0341 (  0.3%)  Deduce function attributes
   0.0330 (  0.3%)   0.0000 (  0.0%)   0.0330 (  0.3%)   0.0330 (  0.3%)  Combine redundant instructions
   0.0293 (  0.2%)   0.0000 (  0.0%)   0.0293 (  0.2%)   0.0293 (  0.2%)  Lower intermediate type generated by HLSGen
   0.0292 (  0.2%)   0.0000 (  0.0%)   0.0292 (  0.2%)   0.0292 (  0.2%)  ReflowCheckPragmaConflicts - check pragma conflicts in reflow
   0.0271 (  0.2%)   0.0010 (  0.2%)   0.0281 (  0.2%)   0.0281 (  0.2%)  Global Value Numbering
   0.0280 (  0.2%)   0.0000 (  0.0%)   0.0280 (  0.2%)   0.0280 (  0.2%)  Memory Summary
   0.0230 (  0.2%)   0.0011 (  0.2%)   0.0240 (  0.2%)   0.0240 (  0.2%)  Loop Invariant Code Motion
   0.0233 (  0.2%)   0.0000 (  0.0%)   0.0233 (  0.2%)   0.0233 (  0.2%)  Loop Invariant Code Motion
   0.0231 (  0.2%)   0.0000 (  0.0%)   0.0231 (  0.2%)   0.0231 (  0.2%)  Loop Invariant Code Motion
   0.0230 (  0.2%)   0.0000 (  0.0%)   0.0230 (  0.2%)   0.0230 (  0.2%)  Global Variable Optimizer
   0.0187 (  0.2%)   0.0038 (  0.7%)   0.0225 (  0.2%)   0.0225 (  0.2%)  ArrayPartition - Partition Arrays into Banks
   0.0221 (  0.2%)   0.0000 (  0.0%)   0.0221 (  0.2%)   0.0221 (  0.2%)  Loop Invariant Code Motion
   0.0220 (  0.2%)   0.0000 (  0.0%)   0.0220 (  0.2%)   0.0220 (  0.2%)  Loop Invariant Code Motion
   0.0206 (  0.2%)   0.0000 (  0.0%)   0.0206 (  0.2%)   0.0206 (  0.2%)  Dead Store Elimination
   0.0195 (  0.2%)   0.0000 (  0.0%)   0.0195 (  0.2%)   0.0195 (  0.2%)  Auto automatic array partition analysis
   0.0195 (  0.2%)   0.0000 (  0.0%)   0.0195 (  0.2%)   0.0194 (  0.2%)  Global Value Numbering
   0.0191 (  0.2%)   0.0000 (  0.0%)   0.0191 (  0.1%)   0.0191 (  0.1%)  Auto automatic array partition analysis
   0.0189 (  0.2%)   0.0000 (  0.0%)   0.0189 (  0.1%)   0.0189 (  0.1%)  Automatic inliner in reflow
   0.0188 (  0.2%)   0.0000 (  0.0%)   0.0188 (  0.1%)   0.0188 (  0.1%)  Reflow pragma unroll loops
   0.0181 (  0.1%)   0.0007 (  0.1%)   0.0188 (  0.1%)   0.0188 (  0.1%)  Global Value Numbering
   0.0179 (  0.1%)   0.0009 (  0.2%)   0.0188 (  0.1%)   0.0187 (  0.1%)  Dead Store Elimination
   0.0187 (  0.2%)   0.0000 (  0.0%)   0.0187 (  0.1%)   0.0186 (  0.1%)  Global Value Numbering
   0.0185 (  0.1%)   0.0000 (  0.0%)   0.0185 (  0.1%)   0.0185 (  0.1%)  Global Value Numbering
   0.0184 (  0.1%)   0.0000 (  0.0%)   0.0184 (  0.1%)   0.0184 (  0.1%)  Global Value Numbering
   0.0181 (  0.1%)   0.0000 (  0.0%)   0.0181 (  0.1%)   0.0181 (  0.1%)  AccessGroup - Group the memory access for the same object
   0.0180 (  0.1%)   0.0000 (  0.0%)   0.0180 (  0.1%)   0.0180 (  0.1%)  Dead Store Elimination
   0.0172 (  0.1%)   0.0000 (  0.0%)   0.0172 (  0.1%)   0.0172 (  0.1%)  Dead Store Elimination
   0.0168 (  0.1%)   0.0000 (  0.0%)   0.0168 (  0.1%)   0.0168 (  0.1%)  AccessGroup - Group the memory access for the same object
   0.0153 (  0.1%)   0.0014 (  0.3%)   0.0168 (  0.1%)   0.0167 (  0.1%)  Dead Store Elimination
   0.0153 (  0.1%)   0.0008 (  0.2%)   0.0161 (  0.1%)   0.0161 (  0.1%)  Global Value Numbering
   0.0154 (  0.1%)   0.0000 (  0.0%)   0.0154 (  0.1%)   0.0154 (  0.1%)  Inliner for always_inline functions
   0.0151 (  0.1%)   0.0000 (  0.0%)   0.0151 (  0.1%)   0.0151 (  0.1%)  Simplify the CFG
   0.0150 (  0.1%)   0.0000 (  0.0%)   0.0150 (  0.1%)   0.0150 (  0.1%)  Detach IR Wrapper
   0.0148 (  0.1%)   0.0000 (  0.0%)   0.0148 (  0.1%)   0.0148 (  0.1%)  AnnotateNoAlias - Annotate NoAlias Attribute on Arguments
   0.0144 (  0.1%)   0.0000 (  0.0%)   0.0144 (  0.1%)   0.0144 (  0.1%)  Global Value Numbering
   0.0139 (  0.1%)   0.0003 (  0.1%)   0.0142 (  0.1%)   0.0142 (  0.1%)  Global Value Numbering
   0.0139 (  0.1%)   0.0000 (  0.0%)   0.0139 (  0.1%)   0.0138 (  0.1%)  Global Value Numbering
   0.0094 (  0.1%)   0.0040 (  0.8%)   0.0135 (  0.1%)   0.0135 (  0.1%)  Dominator Tree Construction
   0.0091 (  0.1%)   0.0039 (  0.8%)   0.0131 (  0.1%)   0.0131 (  0.1%)  AnnotateNoAlias - Annotate NoAlias Attribute on Arguments
   0.0131 (  0.1%)   0.0000 (  0.0%)   0.0131 (  0.1%)   0.0130 (  0.1%)  AutoDepPragmaInfer - Auto Dependence Pragma Infer
   0.0130 (  0.1%)   0.0000 (  0.0%)   0.0130 (  0.1%)   0.0130 (  0.1%)  Bitcode for HLS
   0.0130 (  0.1%)   0.0000 (  0.0%)   0.0130 (  0.1%)   0.0130 (  0.1%)  Dominator Tree Construction
   0.0105 (  0.1%)   0.0021 (  0.4%)   0.0126 (  0.1%)   0.0126 (  0.1%)  Function Alias Analysis Results
   0.0122 (  0.1%)   0.0000 (  0.0%)   0.0122 (  0.1%)   0.0122 (  0.1%)  Function Alias Analysis Results
   0.0108 (  0.1%)   0.0015 (  0.3%)   0.0122 (  0.1%)   0.0121 (  0.1%)  Combine redundant instructions
   0.0121 (  0.1%)   0.0000 (  0.0%)   0.0121 (  0.1%)   0.0121 (  0.1%)  Global Value Numbering
   0.0121 (  0.1%)   0.0000 (  0.0%)   0.0121 (  0.1%)   0.0121 (  0.1%)  Global Value Numbering
   0.0105 (  0.1%)   0.0000 (  0.0%)   0.0105 (  0.1%)   0.0105 (  0.1%)  AutoDepPragmaInfer - Auto Dependence Pragma Infer
   0.0102 (  0.1%)   0.0000 (  0.0%)   0.0102 (  0.1%)   0.0102 (  0.1%)  Lower HLS related loops
   0.0100 (  0.1%)   0.0000 (  0.0%)   0.0100 (  0.1%)   0.0100 (  0.1%)  Dead Store Elimination
   0.0100 (  0.1%)   0.0000 (  0.0%)   0.0100 (  0.1%)   0.0100 (  0.1%)  Dead Store Elimination
   0.0090 (  0.1%)   0.0009 (  0.2%)   0.0099 (  0.1%)   0.0099 (  0.1%)  Dead Store Elimination
   0.0098 (  0.1%)   0.0000 (  0.0%)   0.0098 (  0.1%)   0.0098 (  0.1%)  Dead Store Elimination
   0.0098 (  0.1%)   0.0000 (  0.0%)   0.0098 (  0.1%)   0.0098 (  0.1%)  Dead Store Elimination
   0.0066 (  0.1%)   0.0032 (  0.6%)   0.0097 (  0.1%)   0.0097 (  0.1%)  Dead Store Elimination
   0.0097 (  0.1%)   0.0000 (  0.0%)   0.0097 (  0.1%)   0.0097 (  0.1%)  Function duplication
   0.0097 (  0.1%)   0.0000 (  0.0%)   0.0097 (  0.1%)   0.0097 (  0.1%)  Dead Store Elimination
   0.0096 (  0.1%)   0.0000 (  0.0%)   0.0096 (  0.1%)   0.0096 (  0.1%)  Dead Store Elimination
   0.0093 (  0.1%)   0.0000 (  0.0%)   0.0093 (  0.1%)   0.0093 (  0.1%)  Dead Store Elimination
   0.0092 (  0.1%)   0.0000 (  0.0%)   0.0092 (  0.1%)   0.0091 (  0.1%)  Global Value Numbering
   0.0088 (  0.1%)   0.0000 (  0.0%)   0.0088 (  0.1%)   0.0089 (  0.1%)  MemSSAOpt - Memory SSA based optimizations
   0.0084 (  0.1%)   0.0004 (  0.1%)   0.0088 (  0.1%)   0.0088 (  0.1%)  Induction Variable Simplification
   0.0087 (  0.1%)   0.0000 (  0.0%)   0.0087 (  0.1%)   0.0087 (  0.1%)  Memory Summary
   0.0084 (  0.1%)   0.0000 (  0.0%)   0.0084 (  0.1%)   0.0084 (  0.1%)  Global Value Numbering
   0.0082 (  0.1%)   0.0000 (  0.0%)   0.0082 (  0.1%)   0.0082 (  0.1%)  Global Value Numbering
   0.0077 (  0.1%)   0.0004 (  0.1%)   0.0081 (  0.1%)   0.0081 (  0.1%)  Global Value Numbering
   0.0040 (  0.0%)   0.0040 (  0.8%)   0.0080 (  0.1%)   0.0080 (  0.1%)  Value Propagation
   0.0079 (  0.1%)   0.0000 (  0.0%)   0.0079 (  0.1%)   0.0079 (  0.1%)  AlignMemory - Align memory accesses
   0.0078 (  0.1%)   0.0000 (  0.0%)   0.0078 (  0.1%)   0.0078 (  0.1%)  Global Value Numbering
   0.0076 (  0.1%)   0.0000 (  0.0%)   0.0076 (  0.1%)   0.0076 (  0.1%)  Global Value Numbering
   0.0067 (  0.1%)   0.0009 (  0.2%)   0.0076 (  0.1%)   0.0076 (  0.1%)  Global Value Numbering
   0.0076 (  0.1%)   0.0000 (  0.0%)   0.0076 (  0.1%)   0.0076 (  0.1%)  Global Value Numbering
   0.0076 (  0.1%)   0.0000 (  0.0%)   0.0076 (  0.1%)   0.0076 (  0.1%)  Global Value Numbering
   0.0075 (  0.1%)   0.0000 (  0.0%)   0.0075 (  0.1%)   0.0075 (  0.1%)  Dead Store Elimination
   0.0075 (  0.1%)   0.0000 (  0.0%)   0.0075 (  0.1%)   0.0075 (  0.1%)  Dead Store Elimination
   0.0075 (  0.1%)   0.0000 (  0.0%)   0.0075 (  0.1%)   0.0075 (  0.1%)  Global Value Numbering
   0.0074 (  0.1%)   0.0000 (  0.0%)   0.0074 (  0.1%)   0.0074 (  0.1%)  Global Value Numbering
   0.0073 (  0.1%)   0.0000 (  0.0%)   0.0073 (  0.1%)   0.0073 (  0.1%)  Global Value Numbering
   0.0072 (  0.1%)   0.0000 (  0.0%)   0.0072 (  0.1%)   0.0072 (  0.1%)  Generate IR Wrapper
   0.0069 (  0.1%)   0.0003 (  0.0%)   0.0072 (  0.1%)   0.0072 (  0.1%)  Dead Store Elimination
   0.0071 (  0.1%)   0.0000 (  0.0%)   0.0071 (  0.1%)   0.0071 (  0.1%)  Loop Invariant Code Motion
   0.0071 (  0.1%)   0.0000 (  0.0%)   0.0071 (  0.1%)   0.0071 (  0.1%)  Optimize multiple instructions
   0.0066 (  0.1%)   0.0000 (  0.0%)   0.0066 (  0.1%)   0.0066 (  0.1%)  Jump Threading
   0.0060 (  0.0%)   0.0000 (  0.0%)   0.0060 (  0.0%)   0.0060 (  0.0%)  Remove redundant instructions
   0.0060 (  0.0%)   0.0000 (  0.0%)   0.0060 (  0.0%)   0.0060 (  0.0%)  Natural Loop Information
   0.0058 (  0.0%)   0.0001 (  0.0%)   0.0059 (  0.0%)   0.0059 (  0.0%)  Global Value Numbering
   0.0057 (  0.0%)   0.0001 (  0.0%)   0.0058 (  0.0%)   0.0058 (  0.0%)  Global Value Numbering
   0.0057 (  0.0%)   0.0000 (  0.0%)   0.0057 (  0.0%)   0.0057 (  0.0%)  Natural Loop Information
   0.0033 (  0.0%)   0.0024 (  0.5%)   0.0057 (  0.0%)   0.0057 (  0.0%)  AlignMemory - Align memory accesses
   0.0057 (  0.0%)   0.0000 (  0.0%)   0.0057 (  0.0%)   0.0057 (  0.0%)  Global Value Numbering
   0.0057 (  0.0%)   0.0000 (  0.0%)   0.0057 (  0.0%)   0.0057 (  0.0%)  Dead Store Elimination
   0.0054 (  0.0%)   0.0002 (  0.0%)   0.0056 (  0.0%)   0.0056 (  0.0%)  Dead Store Elimination
   0.0056 (  0.0%)   0.0000 (  0.0%)   0.0056 (  0.0%)   0.0056 (  0.0%)  AlignMemory - Align memory accesses
   0.0056 (  0.0%)   0.0000 (  0.0%)   0.0056 (  0.0%)   0.0056 (  0.0%)  Dead Store Elimination
   0.0056 (  0.0%)   0.0000 (  0.0%)   0.0056 (  0.0%)   0.0056 (  0.0%)  Global Value Numbering
   0.0056 (  0.0%)   0.0000 (  0.0%)   0.0056 (  0.0%)   0.0056 (  0.0%)  Deduce function attributes
   0.0055 (  0.0%)   0.0000 (  0.0%)   0.0055 (  0.0%)   0.0055 (  0.0%)  Synthesis checker
   0.0055 (  0.0%)   0.0000 (  0.0%)   0.0055 (  0.0%)   0.0055 (  0.0%)  AlignMemory - Align memory accesses
   0.0053 (  0.0%)   0.0000 (  0.0%)   0.0053 (  0.0%)   0.0053 (  0.0%)  Global Value Numbering
   0.0051 (  0.0%)   0.0002 (  0.0%)   0.0053 (  0.0%)   0.0053 (  0.0%)  Value Propagation
   0.0052 (  0.0%)   0.0000 (  0.0%)   0.0052 (  0.0%)   0.0052 (  0.0%)  Remove redundant instructions
   0.0052 (  0.0%)   0.0000 (  0.0%)   0.0052 (  0.0%)   0.0052 (  0.0%)  Global Value Numbering
   0.0051 (  0.0%)   0.0000 (  0.0%)   0.0051 (  0.0%)   0.0051 (  0.0%)  Global Value Numbering
   0.0051 (  0.0%)   0.0000 (  0.0%)   0.0051 (  0.0%)   0.0051 (  0.0%)  Dead Store Elimination
   0.0050 (  0.0%)   0.0001 (  0.0%)   0.0050 (  0.0%)   0.0050 (  0.0%)  Memory SSA
   0.0049 (  0.0%)   0.0000 (  0.0%)   0.0050 (  0.0%)   0.0050 (  0.0%)  Critical Path Aanlysis
   0.0025 (  0.0%)   0.0024 (  0.5%)   0.0050 (  0.0%)   0.0050 (  0.0%)  ROM inference pass
   0.0050 (  0.0%)   0.0000 (  0.0%)   0.0050 (  0.0%)   0.0050 (  0.0%)  Evaluate _ssdm_string2bits
   0.0049 (  0.0%)   0.0000 (  0.0%)   0.0049 (  0.0%)   0.0049 (  0.0%)  Dead Store Elimination
   0.0049 (  0.0%)   0.0000 (  0.0%)   0.0049 (  0.0%)   0.0049 (  0.0%)  Dead Store Elimination
   0.0049 (  0.0%)   0.0000 (  0.0%)   0.0049 (  0.0%)   0.0049 (  0.0%)  AlignMemory - Align memory accesses
   0.0048 (  0.0%)   0.0000 (  0.0%)   0.0048 (  0.0%)   0.0048 (  0.0%)  Dead Store Elimination
   0.0048 (  0.0%)   0.0000 (  0.0%)   0.0048 (  0.0%)   0.0048 (  0.0%)  AlignMemory - Align memory accesses
   0.0047 (  0.0%)   0.0000 (  0.0%)   0.0047 (  0.0%)   0.0047 (  0.0%)  AlignMemory - Align memory accesses
   0.0041 (  0.0%)   0.0006 (  0.1%)   0.0047 (  0.0%)   0.0047 (  0.0%)  Memory SSA
   0.0047 (  0.0%)   0.0000 (  0.0%)   0.0047 (  0.0%)   0.0047 (  0.0%)  Combine redundant instructions
   0.0046 (  0.0%)   0.0000 (  0.0%)   0.0046 (  0.0%)   0.0046 (  0.0%)  AlignMemory - Align memory accesses
   0.0046 (  0.0%)   0.0000 (  0.0%)   0.0046 (  0.0%)   0.0046 (  0.0%)  Memory SSA
   0.0046 (  0.0%)   0.0000 (  0.0%)   0.0046 (  0.0%)   0.0046 (  0.0%)  Memory SSA
   0.0046 (  0.0%)   0.0000 (  0.0%)   0.0046 (  0.0%)   0.0046 (  0.0%)  Memory SSA
   0.0045 (  0.0%)   0.0000 (  0.0%)   0.0045 (  0.0%)   0.0045 (  0.0%)  Dead Store Elimination
   0.0045 (  0.0%)   0.0000 (  0.0%)   0.0045 (  0.0%)   0.0045 (  0.0%)  Memory SSA
   0.0045 (  0.0%)   0.0000 (  0.0%)   0.0045 (  0.0%)   0.0045 (  0.0%)  Global Value Numbering
   0.0045 (  0.0%)   0.0000 (  0.0%)   0.0045 (  0.0%)   0.0045 (  0.0%)  Array out of bound check
   0.0044 (  0.0%)   0.0000 (  0.0%)   0.0045 (  0.0%)   0.0045 (  0.0%)  SROA
   0.0045 (  0.0%)   0.0000 (  0.0%)   0.0045 (  0.0%)   0.0045 (  0.0%)  Memory SSA
   0.0045 (  0.0%)   0.0000 (  0.0%)   0.0045 (  0.0%)   0.0045 (  0.0%)  Global Value Numbering
   0.0042 (  0.0%)   0.0003 (  0.1%)   0.0044 (  0.0%)   0.0044 (  0.0%)  Global Value Numbering
   0.0044 (  0.0%)   0.0000 (  0.0%)   0.0044 (  0.0%)   0.0044 (  0.0%)  Dead Store Elimination
   0.0044 (  0.0%)   0.0000 (  0.0%)   0.0044 (  0.0%)   0.0044 (  0.0%)  Global Value Numbering
   0.0041 (  0.0%)   0.0003 (  0.1%)   0.0044 (  0.0%)   0.0044 (  0.0%)  Global Value Numbering
   0.0043 (  0.0%)   0.0000 (  0.0%)   0.0043 (  0.0%)   0.0043 (  0.0%)  Memory SSA
   0.0043 (  0.0%)   0.0000 (  0.0%)   0.0043 (  0.0%)   0.0043 (  0.0%)  Global Value Numbering
   0.0043 (  0.0%)   0.0000 (  0.0%)   0.0043 (  0.0%)   0.0043 (  0.0%)  Global Value Numbering
   0.0043 (  0.0%)   0.0000 (  0.0%)   0.0043 (  0.0%)   0.0043 (  0.0%)  Memory SSA
   0.0043 (  0.0%)   0.0000 (  0.0%)   0.0043 (  0.0%)   0.0043 (  0.0%)  Dead Store Elimination
   0.0043 (  0.0%)   0.0000 (  0.0%)   0.0043 (  0.0%)   0.0043 (  0.0%)  Global Value Numbering
   0.0042 (  0.0%)   0.0000 (  0.0%)   0.0042 (  0.0%)   0.0042 (  0.0%)  Global Value Numbering
   0.0042 (  0.0%)   0.0000 (  0.0%)   0.0042 (  0.0%)   0.0042 (  0.0%)  Recursively inline barriers caller to kernel
   0.0042 (  0.0%)   0.0000 (  0.0%)   0.0042 (  0.0%)   0.0042 (  0.0%)  Memory Summary
   0.0042 (  0.0%)   0.0000 (  0.0%)   0.0042 (  0.0%)   0.0042 (  0.0%)  Memory SSA
   0.0042 (  0.0%)   0.0000 (  0.0%)   0.0042 (  0.0%)   0.0042 (  0.0%)  Memory Summary
   0.0042 (  0.0%)   0.0000 (  0.0%)   0.0042 (  0.0%)   0.0042 (  0.0%)  Array out of bound check
   0.0042 (  0.0%)   0.0000 (  0.0%)   0.0042 (  0.0%)   0.0042 (  0.0%)  Memory SSA
   0.0042 (  0.0%)   0.0000 (  0.0%)   0.0042 (  0.0%)   0.0042 (  0.0%)  Merge accesses in the same region
   0.0041 (  0.0%)   0.0000 (  0.0%)   0.0041 (  0.0%)   0.0041 (  0.0%)  Memory SSA
   0.0041 (  0.0%)   0.0000 (  0.0%)   0.0041 (  0.0%)   0.0041 (  0.0%)  Dead Store Elimination
   0.0038 (  0.0%)   0.0004 (  0.1%)   0.0041 (  0.0%)   0.0041 (  0.0%)  Combine redundant instructions
   0.0036 (  0.0%)   0.0005 (  0.1%)   0.0041 (  0.0%)   0.0041 (  0.0%)  Memory SSA
   0.0040 (  0.0%)   0.0000 (  0.0%)   0.0040 (  0.0%)   0.0040 (  0.0%)  Synthesis checker
   0.0039 (  0.0%)   0.0000 (  0.0%)   0.0039 (  0.0%)   0.0039 (  0.0%)  Merge accesses
   0.0039 (  0.0%)   0.0000 (  0.0%)   0.0039 (  0.0%)   0.0039 (  0.0%)  Merge accesses
   0.0039 (  0.0%)   0.0000 (  0.0%)   0.0039 (  0.0%)   0.0039 (  0.0%)  Merge accesses in the same region
   0.0039 (  0.0%)   0.0000 (  0.0%)   0.0039 (  0.0%)   0.0039 (  0.0%)  dump pragma info via xml format
   0.0038 (  0.0%)   0.0000 (  0.0%)   0.0039 (  0.0%)   0.0039 (  0.0%)  Memory Summary
   0.0037 (  0.0%)   0.0000 (  0.0%)   0.0037 (  0.0%)   0.0037 (  0.0%)  Collect complexity metrics for FE reflow
   0.0037 (  0.0%)   0.0000 (  0.0%)   0.0037 (  0.0%)   0.0037 (  0.0%)  Combine redundant instructions
   0.0037 (  0.0%)   0.0000 (  0.0%)   0.0037 (  0.0%)   0.0037 (  0.0%)   automatic function inline driven by performance to break up circuit dependence
   0.0036 (  0.0%)   0.0000 (  0.0%)   0.0036 (  0.0%)   0.0036 (  0.0%)  Memory SSA
   0.0036 (  0.0%)   0.0000 (  0.0%)   0.0036 (  0.0%)   0.0036 (  0.0%)  Combine redundant instructions
   0.0036 (  0.0%)   0.0000 (  0.0%)   0.0036 (  0.0%)   0.0036 (  0.0%)  Combine redundant instructions
   0.0035 (  0.0%)   0.0000 (  0.0%)   0.0035 (  0.0%)   0.0036 (  0.0%)  Memory SSA
   0.0034 (  0.0%)   0.0001 (  0.0%)   0.0035 (  0.0%)   0.0035 (  0.0%)  Combine redundant instructions
   0.0025 (  0.0%)   0.0010 (  0.2%)   0.0035 (  0.0%)   0.0035 (  0.0%)  Produce message if basic block has too many instructions
   0.0035 (  0.0%)   0.0000 (  0.0%)   0.0035 (  0.0%)   0.0035 (  0.0%)  Aggressive Dead Code Elimination
   0.0034 (  0.0%)   0.0000 (  0.0%)   0.0034 (  0.0%)   0.0034 (  0.0%)  Memory SSA
   0.0030 (  0.0%)   0.0005 (  0.1%)   0.0034 (  0.0%)   0.0034 (  0.0%)  Optimize multiple instructions
   0.0034 (  0.0%)   0.0000 (  0.0%)   0.0034 (  0.0%)   0.0034 (  0.0%)  Array out of bound check
   0.0032 (  0.0%)   0.0002 (  0.0%)   0.0034 (  0.0%)   0.0034 (  0.0%)  Combine redundant instructions
   0.0033 (  0.0%)   0.0000 (  0.0%)   0.0033 (  0.0%)   0.0033 (  0.0%)  AlignMemory - Align memory accesses
   0.0032 (  0.0%)   0.0000 (  0.0%)   0.0032 (  0.0%)   0.0032 (  0.0%)  Memory SSA
   0.0031 (  0.0%)   0.0001 (  0.0%)   0.0032 (  0.0%)   0.0032 (  0.0%)  Combine redundant instructions
   0.0032 (  0.0%)   0.0000 (  0.0%)   0.0032 (  0.0%)   0.0032 (  0.0%)  Merge accesses
   0.0032 (  0.0%)   0.0000 (  0.0%)   0.0032 (  0.0%)   0.0032 (  0.0%)  Combine redundant instructions
   0.0031 (  0.0%)   0.0000 (  0.0%)   0.0031 (  0.0%)   0.0031 (  0.0%)  Analyze sequential accesses
   0.0030 (  0.0%)   0.0000 (  0.0%)   0.0030 (  0.0%)   0.0030 (  0.0%)  Memory SSA
   0.0030 (  0.0%)   0.0000 (  0.0%)   0.0030 (  0.0%)   0.0030 (  0.0%)  LegacyShiftRegisterRecognize - Recognize shift registers and memory
   0.0016 (  0.0%)   0.0014 (  0.3%)   0.0030 (  0.0%)   0.0030 (  0.0%)  Memory SSA
   0.0030 (  0.0%)   0.0000 (  0.0%)   0.0030 (  0.0%)   0.0030 (  0.0%)  Merge accesses
   0.0025 (  0.0%)   0.0005 (  0.1%)   0.0030 (  0.0%)   0.0029 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0029 (  0.0%)   0.0000 (  0.0%)   0.0029 (  0.0%)   0.0029 (  0.0%)  Combine redundant instructions
   0.0029 (  0.0%)   0.0000 (  0.0%)   0.0029 (  0.0%)   0.0029 (  0.0%)  Memory SSA
   0.0029 (  0.0%)   0.0000 (  0.0%)   0.0029 (  0.0%)   0.0029 (  0.0%)  Combine redundant instructions
   0.0028 (  0.0%)   0.0000 (  0.0%)   0.0028 (  0.0%)   0.0028 (  0.0%)  Memory SSA
   0.0028 (  0.0%)   0.0000 (  0.0%)   0.0028 (  0.0%)   0.0028 (  0.0%)  Interprocedural Sparse Conditional Constant Propagation
   0.0028 (  0.0%)   0.0000 (  0.0%)   0.0028 (  0.0%)   0.0028 (  0.0%)  Promote Memory to Register
   0.0028 (  0.0%)   0.0000 (  0.0%)   0.0028 (  0.0%)   0.0028 (  0.0%)  Array out of bound check
   0.0028 (  0.0%)   0.0000 (  0.0%)   0.0028 (  0.0%)   0.0028 (  0.0%)  Array out of bound check
   0.0028 (  0.0%)   0.0000 (  0.0%)   0.0028 (  0.0%)   0.0028 (  0.0%)  Combine redundant instructions
   0.0028 (  0.0%)   0.0000 (  0.0%)   0.0028 (  0.0%)   0.0028 (  0.0%)  Combine redundant instructions
   0.0027 (  0.0%)   0.0000 (  0.0%)   0.0027 (  0.0%)   0.0027 (  0.0%)  Merge accesses in the same region
   0.0027 (  0.0%)   0.0000 (  0.0%)   0.0027 (  0.0%)   0.0027 (  0.0%)  Array out of bound check
   0.0027 (  0.0%)   0.0000 (  0.0%)   0.0027 (  0.0%)   0.0027 (  0.0%)  Array out of bound check
   0.0025 (  0.0%)   0.0000 (  0.0%)   0.0025 (  0.0%)   0.0025 (  0.0%)  Merge accesses
   0.0025 (  0.0%)   0.0000 (  0.0%)   0.0025 (  0.0%)   0.0025 (  0.0%)  Induction Variable Simplification
   0.0025 (  0.0%)   0.0000 (  0.0%)   0.0025 (  0.0%)   0.0024 (  0.0%)  Induction Variable Simplification
   0.0024 (  0.0%)   0.0000 (  0.0%)   0.0024 (  0.0%)   0.0024 (  0.0%)  Combine redundant instructions
   0.0024 (  0.0%)   0.0000 (  0.0%)   0.0024 (  0.0%)   0.0024 (  0.0%)  Dead Global Elimination
   0.0024 (  0.0%)   0.0000 (  0.0%)   0.0024 (  0.0%)   0.0024 (  0.0%)  Aggressive Dead Code Elimination
   0.0023 (  0.0%)   0.0001 (  0.0%)   0.0024 (  0.0%)   0.0024 (  0.0%)  Combine redundant instructions
   0.0024 (  0.0%)   0.0000 (  0.0%)   0.0024 (  0.0%)   0.0024 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0024 (  0.0%)   0.0000 (  0.0%)   0.0024 (  0.0%)   0.0024 (  0.0%)  Combine redundant instructions
   0.0024 (  0.0%)   0.0000 (  0.0%)   0.0024 (  0.0%)   0.0024 (  0.0%)  Induction Variable Simplification
   0.0023 (  0.0%)   0.0001 (  0.0%)   0.0024 (  0.0%)   0.0024 (  0.0%)  Combine redundant instructions
   0.0024 (  0.0%)   0.0000 (  0.0%)   0.0024 (  0.0%)   0.0024 (  0.0%)  Combine redundant instructions
   0.0023 (  0.0%)   0.0000 (  0.0%)   0.0023 (  0.0%)   0.0023 (  0.0%)  Reflow pragma unroll loops
   0.0023 (  0.0%)   0.0000 (  0.0%)   0.0023 (  0.0%)   0.0023 (  0.0%)  Induction Variable Simplification
   0.0022 (  0.0%)   0.0000 (  0.0%)   0.0022 (  0.0%)   0.0022 (  0.0%)  Combine redundant instructions
   0.0022 (  0.0%)   0.0000 (  0.0%)   0.0022 (  0.0%)   0.0021 (  0.0%)  Combine redundant instructions
   0.0021 (  0.0%)   0.0000 (  0.0%)   0.0021 (  0.0%)   0.0021 (  0.0%)  Automatic data reuse optimization
   0.0020 (  0.0%)   0.0001 (  0.0%)   0.0021 (  0.0%)   0.0021 (  0.0%)  Aggressive Dead Code Elimination
   0.0017 (  0.0%)   0.0004 (  0.1%)   0.0021 (  0.0%)   0.0021 (  0.0%)  Scalar Evolution Analysis
   0.0008 (  0.0%)   0.0012 (  0.2%)   0.0021 (  0.0%)   0.0021 (  0.0%)  Automatically infer occurrence information
   0.0021 (  0.0%)   0.0000 (  0.0%)   0.0021 (  0.0%)   0.0021 (  0.0%)  Optimize multiple instructions
   0.0021 (  0.0%)   0.0000 (  0.0%)   0.0021 (  0.0%)   0.0021 (  0.0%)  Loop Load Elimination
   0.0020 (  0.0%)   0.0000 (  0.0%)   0.0020 (  0.0%)   0.0020 (  0.0%)  Value Propagation
   0.0020 (  0.0%)   0.0000 (  0.0%)   0.0020 (  0.0%)   0.0020 (  0.0%)  Promote Memory to Register
   0.0020 (  0.0%)   0.0000 (  0.0%)   0.0020 (  0.0%)   0.0020 (  0.0%)  Value Propagation
   0.0020 (  0.0%)   0.0000 (  0.0%)   0.0020 (  0.0%)   0.0020 (  0.0%)  Array abnormal access check
   0.0019 (  0.0%)   0.0000 (  0.0%)   0.0019 (  0.0%)   0.0019 (  0.0%)  Value Propagation
   0.0000 (  0.0%)   0.0019 (  0.4%)   0.0019 (  0.0%)   0.0019 (  0.0%)  Infer complete unroll based on pipeline pragma
   0.0019 (  0.0%)   0.0000 (  0.0%)   0.0019 (  0.0%)   0.0019 (  0.0%)  Deduce function attributes
   0.0019 (  0.0%)   0.0000 (  0.0%)   0.0019 (  0.0%)   0.0019 (  0.0%)  Deduce function attributes
   0.0019 (  0.0%)   0.0000 (  0.0%)   0.0019 (  0.0%)   0.0019 (  0.0%)  Infer PPPO for array-to-streams
   0.0018 (  0.0%)   0.0000 (  0.0%)   0.0018 (  0.0%)   0.0018 (  0.0%)  LegacyShiftRegisterRecognize - Recognize shift registers and memory
   0.0018 (  0.0%)   0.0000 (  0.0%)   0.0018 (  0.0%)   0.0018 (  0.0%)  Aggressive Dead Code Elimination
   0.0018 (  0.0%)   0.0000 (  0.0%)   0.0018 (  0.0%)   0.0018 (  0.0%)  Produce message if basic block has too many instructions
   0.0017 (  0.0%)   0.0001 (  0.0%)   0.0018 (  0.0%)   0.0018 (  0.0%)  Combine redundant instructions
   0.0015 (  0.0%)   0.0003 (  0.1%)   0.0018 (  0.0%)   0.0017 (  0.0%)  Dominator Tree Construction
   0.0017 (  0.0%)   0.0000 (  0.0%)   0.0017 (  0.0%)   0.0017 (  0.0%)  Value Propagation
   0.0015 (  0.0%)   0.0002 (  0.0%)   0.0017 (  0.0%)   0.0017 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0008 (  0.0%)   0.0009 (  0.2%)   0.0017 (  0.0%)   0.0017 (  0.0%)  Early GVN Hoisting of Expressions
   0.0016 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.0%)   0.0016 (  0.0%)  Simple constant propagation
   0.0011 (  0.0%)   0.0006 (  0.1%)   0.0016 (  0.0%)   0.0016 (  0.0%)  Dead Global Elimination
   0.0016 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.0%)   0.0016 (  0.0%)  dataflow canonicalization
   0.0016 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.0%)   0.0016 (  0.0%)  Lower HLS related attributes
   0.0016 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.0%)   0.0016 (  0.0%)  Dominator Tree Construction
   0.0016 (  0.0%)   0.0001 (  0.0%)   0.0016 (  0.0%)   0.0016 (  0.0%)  Optimize multiple instructions
   0.0016 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.0%)   0.0016 (  0.0%)  Early GVN Hoisting of Expressions
   0.0016 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.0%)   0.0016 (  0.0%)  Aggressive Dead Code Elimination
   0.0016 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.0%)   0.0016 (  0.0%)  Dominator Tree Construction
   0.0016 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.0%)   0.0016 (  0.0%)  Value Propagation
   0.0015 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.0%)   0.0015 (  0.0%)  Struct object aggregation
   0.0015 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.0%)   0.0015 (  0.0%)  Early GVN Hoisting of Expressions
   0.0016 (  0.0%)   0.0000 (  0.0%)   0.0016 (  0.0%)   0.0015 (  0.0%)  Scalar Evolution Analysis
   0.0015 (  0.0%)   0.0001 (  0.0%)   0.0015 (  0.0%)   0.0015 (  0.0%)  Value Propagation
   0.0015 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.0%)   0.0015 (  0.0%)  Combine redundant instructions
   0.0015 (  0.0%)   0.0000 (  0.0%)   0.0015 (  0.0%)   0.0015 (  0.0%)  Reflow pragma unroll loops
   0.0014 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)   0.0014 (  0.0%)  Aggressive Dead Code Elimination
   0.0014 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)   0.0014 (  0.0%)  Early GVN Hoisting of Expressions
   0.0014 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)   0.0014 (  0.0%)  Pragma preprocessing after clang
   0.0010 (  0.0%)   0.0004 (  0.1%)   0.0014 (  0.0%)   0.0014 (  0.0%)  Dominator Tree Construction
   0.0013 (  0.0%)   0.0001 (  0.0%)   0.0014 (  0.0%)   0.0014 (  0.0%)  Aggressive Dead Code Elimination
   0.0014 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)   0.0014 (  0.0%)  Dead Argument Elimination
   0.0014 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)   0.0014 (  0.0%)  Combine redundant instructions
   0.0014 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)   0.0014 (  0.0%)  Optimize multiple instructions
   0.0014 (  0.0%)   0.0000 (  0.0%)   0.0014 (  0.0%)   0.0014 (  0.0%)  Interprocedural Sparse Conditional Constant Propagation
   0.0013 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)   0.0013 (  0.0%)  Optimize multiple instructions
   0.0008 (  0.0%)   0.0005 (  0.1%)   0.0013 (  0.0%)   0.0013 (  0.0%)  Combine redundant instructions
   0.0012 (  0.0%)   0.0001 (  0.0%)   0.0013 (  0.0%)   0.0013 (  0.0%)  Dominator Tree Construction
   0.0013 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)   0.0013 (  0.0%)  Induction Variable Simplification
   0.0011 (  0.0%)   0.0002 (  0.0%)   0.0013 (  0.0%)   0.0013 (  0.0%)  Natural Loop Information
   0.0013 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)   0.0013 (  0.0%)  Induction Variable Simplification
   0.0013 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)   0.0013 (  0.0%)  Reflow pragma unroll loops
   0.0013 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)   0.0013 (  0.0%)  Reflow pragma unroll loops
   0.0013 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)   0.0013 (  0.0%)  Rotate Loops
   0.0013 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)   0.0013 (  0.0%)  Combine redundant instructions
   0.0013 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)   0.0013 (  0.0%)  Interprocedural Sparse Conditional Constant Propagation
   0.0013 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)   0.0013 (  0.0%)  Aggressive Dead Code Elimination
   0.0013 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)   0.0013 (  0.0%)  Combine redundant instructions
   0.0013 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)   0.0013 (  0.0%)  Simplify the CFG
   0.0012 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)   0.0013 (  0.0%)  Value Propagation
   0.0013 (  0.0%)   0.0000 (  0.0%)   0.0013 (  0.0%)   0.0013 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0011 (  0.0%)   0.0001 (  0.0%)   0.0012 (  0.0%)   0.0012 (  0.0%)  Aggressive Dead Code Elimination
   0.0011 (  0.0%)   0.0001 (  0.0%)   0.0012 (  0.0%)   0.0012 (  0.0%)  Value Propagation
   0.0012 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)   0.0012 (  0.0%)  Aggressive Dead Code Elimination
   0.0012 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)   0.0012 (  0.0%)  Natural Loop Information
   0.0012 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)   0.0012 (  0.0%)  Value Propagation
   0.0011 (  0.0%)   0.0001 (  0.0%)   0.0012 (  0.0%)   0.0012 (  0.0%)  Aggressive Dead Code Elimination
   0.0012 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)   0.0012 (  0.0%)  Aggressive Dead Code Elimination
   0.0012 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)   0.0012 (  0.0%)  Lower HLS related intrinsics
   0.0012 (  0.0%)   0.0000 (  0.0%)   0.0012 (  0.0%)   0.0012 (  0.0%)  Induction Variable Simplification
   0.0011 (  0.0%)   0.0001 (  0.0%)   0.0011 (  0.0%)   0.0011 (  0.0%)  Aggressive Dead Code Elimination
   0.0011 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)   0.0011 (  0.0%)  Value Propagation
   0.0011 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)   0.0011 (  0.0%)  Optimize multiple instructions
   0.0010 (  0.0%)   0.0001 (  0.0%)   0.0011 (  0.0%)   0.0011 (  0.0%)  Aggressive Dead Code Elimination
   0.0009 (  0.0%)   0.0001 (  0.0%)   0.0011 (  0.0%)   0.0011 (  0.0%)  Remove redundant instructions
   0.0011 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)   0.0011 (  0.0%)  Collect complexity metrics for FE reflow
   0.0011 (  0.0%)   0.0000 (  0.0%)   0.0011 (  0.0%)   0.0010 (  0.0%)  Aggressive Dead Code Elimination
   0.0010 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Dominator Tree Construction
   0.0005 (  0.0%)   0.0005 (  0.1%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Aggressive Dead Code Elimination
   0.0010 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Aggressive Dead Code Elimination
   0.0010 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Aggressive Dead Code Elimination
   0.0007 (  0.0%)   0.0003 (  0.1%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Natural Loop Information
   0.0009 (  0.0%)   0.0001 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Aggressive Dead Code Elimination
   0.0010 (  0.0%)   0.0001 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Collect complexity metrics for FE reflow
   0.0009 (  0.0%)   0.0001 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Simplify the CFG
   0.0010 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Array abnormal access check
   0.0010 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Early GVN Hoisting of Expressions
   0.0010 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Achieval II estimation - estimate acheival II lower bound according to constraint
   0.0010 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Combine redundant instructions
   0.0010 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Array abnormal access check
   0.0010 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Array abnormal access check
   0.0009 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Performance Evaluation
   0.0010 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Simple constant propagation
   0.0009 (  0.0%)   0.0001 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Natural Loop Information
   0.0010 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Array abnormal access check
   0.0010 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Structure stription
   0.0010 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Function Alias Analysis Results
   0.0009 (  0.0%)   0.0001 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Aggressive Dead Code Elimination
   0.0010 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Infer loop trip count
   0.0009 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)   0.0010 (  0.0%)  Dominator Tree Construction
   0.0009 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Value Propagation
   0.0010 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Aggressive Dead Code Elimination
   0.0010 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Aggressive Dead Code Elimination
   0.0010 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Function Alias Analysis Results
   0.0009 (  0.0%)   0.0001 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  InferXCLAttributes - Infer XCL attributes
   0.0008 (  0.0%)   0.0001 (  0.0%)   0.0010 (  0.0%)   0.0010 (  0.0%)  Early GVN Hoisting of Expressions
   0.0010 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)   0.0009 (  0.0%)  Aggressive Dead Code Elimination
   0.0010 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)   0.0009 (  0.0%)  Normalize condition on switch-cases and muxes
   0.0009 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Assign names to anonymous instructions (structure based)
   0.0009 (  0.0%)   0.0000 (  0.0%)   0.0010 (  0.0%)   0.0009 (  0.0%)  Aggressive Dead Code Elimination
   0.0009 (  0.0%)   0.0001 (  0.0%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Aggressive Dead Code Elimination
   0.0009 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Dominator Tree Construction
   0.0009 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Simple constant propagation
   0.0009 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Aggressive Dead Code Elimination
   0.0009 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Aggressive Dead Code Elimination
   0.0009 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Early GVN Hoisting of Expressions
   0.0009 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Aggressive Dead Code Elimination
   0.0009 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Aggressive Dead Code Elimination
   0.0009 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Aggressive Dead Code Elimination
   0.0005 (  0.0%)   0.0004 (  0.1%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Dominator Tree Construction
   0.0009 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Reflow pipeline loop automatically
   0.0009 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)   0.0009 (  0.0%)  Aggressive Dead Code Elimination
   0.0009 (  0.0%)   0.0000 (  0.0%)   0.0009 (  0.0%)   0.0008 (  0.0%)  Promote Memory to Register
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Remove redundant instructions
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Pragma preprocessing after clang
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Aggressive Dead Code Elimination
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Resolve full load/store
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Collect complexity metrics for FE reflow
   0.0008 (  0.0%)   0.0001 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Optimize multiple instructions
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Aggressive Dead Code Elimination
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Remove redundant instructions
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Aggressive Dead Code Elimination
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Dominator Tree Construction
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Remove redundant instructions
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Optimize multiple instructions
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Value Propagation
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Function Alias Analysis Results
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Remove redundant instructions
   0.0006 (  0.0%)   0.0001 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Lazy Value Information Analysis
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Simplify types in the LLVM IR, redundant type hierarchy
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  AnnotateNoAlias - Annotate NoAlias Attribute on Arguments
   0.0007 (  0.0%)   0.0001 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Simplify the CFG
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0008 (  0.0%)  Memory Dependence Analysis
   0.0007 (  0.0%)   0.0001 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Remove redundant instructions
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Auto automatic array partition filter analysis
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Aggressive Dead Code Elimination
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0008 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Remove redundant instructions
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  CallGraph Construction
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0008 (  0.0%)  Object Decomposition
   0.0008 (  0.0%)   0.0000 (  0.0%)   0.0008 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Remove redundant instructions
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Post-Dominator Tree Construction
   0.0006 (  0.0%)   0.0001 (  0.0%)   0.0008 (  0.0%)   0.0007 (  0.0%)  Lazy Branch Probability Analysis
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Remove redundant instructions
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Remove redundant instructions
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Collect complexity metrics for FE reflow
   0.0006 (  0.0%)   0.0002 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  LoopFlattenMark - Mark nested loops flattenable recursively
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Remove redundant instructions
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Remove redundant instructions
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Collect complexity metrics for FE reflow
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  LoopFlattenMark - Mark nested loops flattenable recursively
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Infer PPPO for array-to-streams
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Collect complexity metrics for FE reflow
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Remove redundant instructions
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0002 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Lazy Branch Probability Analysis
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Collect complexity metrics for FE reflow
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Aggressive Dead Code Elimination
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0001 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Optimization Remark Emitter
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Collect complexity metrics for FE reflow
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Remove redundant instructions
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Remove redundant instructions
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0001 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Lazy Block Frequency Analysis
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Value Propagation
   0.0005 (  0.0%)   0.0002 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Lazy Block Frequency Analysis
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Aggressive Dead Code Elimination
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Straight line strength reduction
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Aggressive Dead Code Elimination
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Aggressive Dead Code Elimination
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Value Propagation
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  InferXCLAttrImplications - Infer XCL attribute implications
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Simplify the CFG
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Auto automatic array partition filter analysis
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Aggressive Dead Code Elimination
   0.0005 (  0.0%)   0.0002 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Optimization Remark Emitter
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Value Propagation
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Array abnormal access check
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Dominator Tree Construction
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0001 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  CallGraph Construction
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  CallGraph Construction
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Remove redundant instructions
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  CallGraph Construction
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Collect complexity metrics for FE reflow
   0.0006 (  0.0%)   0.0001 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Function Alias Analysis Results
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  do loop unroll according tripcount threshold config
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Lower directive scopes
   0.0000 (  0.0%)   0.0007 (  0.1%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Collect complexity metrics for FE reflow
   0.0007 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0007 (  0.0%)  Optimize multiple instructions
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0007 (  0.0%)   0.0006 (  0.0%)  Infer complete unroll based on pipeline pragma
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  LoopFlattenMark - Mark nested loops flattenable recursively
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Collect complexity metrics for FE reflow
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Extract cfgs in dataflow
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Value Propagation
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Print module to file
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  CallGraph Construction
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  CallGraph Construction
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Optimize multiple instructions
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0003 (  0.0%)   0.0003 (  0.1%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  CallGraph Construction
   0.0005 (  0.0%)   0.0002 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Assign names to anonymous instructions (structure based)
   0.0006 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Collect complexity metrics for FE reflow
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Optimize multiple instructions
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0006 (  0.1%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Assign names to anonymous instructions (structure based)
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Lower black box
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0003 (  0.0%)   0.0004 (  0.1%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Dominator Tree Construction
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Early GVN Hoisting of Expressions
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Optimize multiple instructions
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Remove redundant instructions
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Optimize multiple instructions
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Auto automatic array partition filter analysis
   0.0001 (  0.0%)   0.0005 (  0.1%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Optimize multiple instructions
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Optimize multiple instructions
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Assign names to anonymous instructions (structure based)
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Optimize multiple instructions
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Simplify the CFG
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  CallGraph Construction
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0002 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Internalize Global Symbols
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  RemoveConflictingBurst - Remove port conflicting bursts
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0002 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Remove redundant instructions
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Optimize multiple instructions
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0002 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Optimize multiple instructions
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Optimize multiple instructions
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Optimize multiple instructions
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Dominator Tree Construction
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Remove redundant instructions
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Remove redundant instructions
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Value Propagation
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Lower printf for the fpga target
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Remove redundant instructions
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Dominator Tree Construction
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Aggressive Dead Code Elimination
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0006 (  0.0%)  Value Propagation
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0006 (  0.0%)  Divergence Analysis
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0005 (  0.0%)  Value Propagation
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Eliminate dead debug information intrinsic
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0006 (  0.0%)   0.0000 (  0.0%)   0.0006 (  0.0%)   0.0005 (  0.0%)  Optimize multiple instructions
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0006 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Optimize multiple instructions
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Optimize multiple instructions
   0.0005 (  0.0%)   0.0001 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Early GVN Hoisting of Expressions
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Collect complexity metrics for FE reflow
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Unswitch loops
   0.0004 (  0.0%)   0.0001 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  LoopFlattenMark - Mark nested loops flattenable recursively
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  LoopFlattenMark - Mark nested loops flattenable recursively
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Lower tasks into dataflow form
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Remove redundant instructions
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Auto automatic array partition filter analysis
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Infer PPPO for array-to-streams
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Optimize multiple instructions
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Dump HBM driver helper code
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  LoopFlattenMark - Mark nested loops flattenable recursively
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Optimize multiple instructions
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Optimize multiple instructions
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Auto automatic array partition filter analysis
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Early GVN Hoisting of Expressions
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0001 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Normalize condition on switch-cases and muxes
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Simplify the CFG
   0.0003 (  0.0%)   0.0002 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0005 (  0.1%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Collect complexity metrics for FE reflow
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Dead Code Elimination
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Value Propagation
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Infer complete unroll based on pipeline pragma
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Dominator Tree Construction
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  CallGraph Construction
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Aggressive Dead Code Elimination
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Simplify the CFG
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Simplify the CFG
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Assign names to anonymous instructions (structure based)
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Collect complexity metrics for FE reflow
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Achieval II estimation - estimate acheival II lower bound according to constraint
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Simplify the CFG
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  LoopFlattenMark - Mark nested loops flattenable recursively
   0.0005 (  0.0%)   0.0000 (  0.0%)   0.0005 (  0.0%)   0.0005 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Loop-Closed SSA Form Pass
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  demangle Name to normal Name
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Loop-Closed SSA Form Pass
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Remove redundant instructions
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  SROA
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Infer complete unroll based on pipeline pragma
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Achieval II estimation - estimate acheival II lower bound according to constraint
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Eliminate dead debug information intrinsic
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Simplify the CFG
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Eliminate dead debug information intrinsic
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Remove redundant instructions
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Natural Loop Information
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Collect complexity metrics for FE reflow
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Infer PPPO for array-to-streams
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Lower BINDOP scope bundle
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Simplify the CFG
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  AnnotateNoAlias - Annotate NoAlias Attribute on Arguments
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Remove redundant instructions
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Natural Loop Information
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Divergence Analysis
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0003 (  0.0%)   0.0001 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Dead Code Elimination
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Simplify the CFG
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Post-Dominator Tree Construction
   0.0003 (  0.0%)   0.0001 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Localize variables
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Natural Loop Information
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Dominator Tree Construction
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Interleave memory accesses
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Natural Loop Information
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Eliminate dead debug information intrinsic
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Eliminate dead debug information intrinsic
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Remove redundant instructions
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Remove redundant instructions
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Localize variables
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Simplify the CFG
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Remove redundant instructions
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Simplify the CFG
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Divergence Analysis
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Dead Code Elimination
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Remove redundant instructions
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Localize variables
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Change xcl attribute to call sideeffect
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Eliminate dead debug information intrinsic
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Remove redundant instructions
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  LowerPredicate - Lower predicates to control-flow
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Remove redundant instructions
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Function Alias Analysis Results
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Simplify the CFG
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Dead Code Elimination
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0004 (  0.0%)  Dead Argument Elimination
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Eliminate dead debug information intrinsic
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Auto automatic array partition filter analysis
   0.0004 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0003 (  0.0%)  Divergence Analysis
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0004 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Function Alias Analysis Results
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Resolve full load/store
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Remove unreachable basic blocks under switch
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Optimize multiple instructions
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Infer complete unroll based on pipeline pragma
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Eliminate dead debug information intrinsic
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Global Variable Optimizer
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Eliminate dead debug information intrinsic
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Eliminate dead debug information intrinsic
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Optimize multiple instructions
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Resolve full load/store
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Disaggregation preprocessing
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Eliminate dead debug information intrinsic
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dead Global Elimination
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Eliminate dead debug information intrinsic
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dead Global Elimination
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0002 (  0.0%)   0.0001 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Infer PPPO for array-to-streams
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Simplify types in the LLVM IR, redundant type hierarchy
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  AttrPropagation - Propagate Pointer Parameter Attribute
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dead Global Elimination
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Jump Threading
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Promote 'by reference' arguments to scalars
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Normalize condition on switch-cases and muxes
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Simplify types in the LLVM IR, redundant type hierarchy
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Scalar Evolution Analysis
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  clean some traps produced by clang
   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Eliminate dead debug information intrinsic
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Array abnormal access check
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Eliminate dead debug information intrinsic
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Simplify the CFG
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Detect single entry single exit regions
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Eliminate dead debug information intrinsic
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  LowerPredicate - Lower predicates to control-flow
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Post-Dominator Tree Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Loop-Closed SSA Form Pass
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  CallGraph Construction
   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)   0.0003 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0003 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dead Code Elimination
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0003 (  0.0%)   0.0000 (  0.0%)   0.0003 (  0.0%)   0.0002 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Simplify the CFG
   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Promote Memory to Register
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  WidenBurst - Widen bursts
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dead Global Elimination
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dead Global Elimination
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Simplify the CFG
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Inline sub function calls recursively
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Jump Threading
   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Extract dataflow loop
   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Simplify the CFG
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Lazy Value Information Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  ShiftRegInference - Automatic Shift Register Inference
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Simplify the CFG
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Detect single entry single exit regions
   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Divergence Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  LayoutTransform - Layout Transform Pragma Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  LayoutTransform - Layout Transform Pragma Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  SROA
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Simplify the CFG
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Divergence Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Simplify the CFG
   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Remove unreachable basic blocks under switch
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  ReflowCheckVarPragmaConflicts - check variable pragma conflicts in reflow
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dead Code Elimination
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Remove unreachable basic blocks under switch
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dead Global Elimination
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dead Global Elimination
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Auto automatic array partition filter analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Simplify the CFG
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Simplify the CFG
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Simplify the CFG
   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Lower HLS related intrinsics
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Eliminate pointer selection
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Remove unreachable basic blocks under switch
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Special handling of axis with side-channels
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dead Argument Elimination
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Lower fence group
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Remove unreachable basic blocks under switch
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dead Global Elimination
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Critical Path Aanlysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Detect single entry single exit regions
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Remove unreachable basic blocks under switch
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominance Frontier Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Simplify loop CFG
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Remove unreachable basic blocks under switch
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dead Code Elimination
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Loop-Closed SSA Form Pass
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dead Global Elimination
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Infer set function attributes
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Rotate Loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Remove unreachable basic blocks under switch
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  SROA
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  LayoutTransform - Layout Transform Pragma Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Reduce the height of tree
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Promote Memory to Register
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Remove unreachable basic blocks under switch
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Canonicalize natural loops
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Eliminate pointer selection
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Eliminate pointer selection
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Remove unreachable basic blocks under switch
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dead Global Elimination
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dataflow Process Duplication
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Eliminate dead debug information intrinsic
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Eliminate pointer selection
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Delete dead loops
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Memory Dependence Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0002 (  0.0%)  Post-Dominator Tree Construction
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0002 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate pointer selection
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0001 (  0.0%)  Detect single entry single exit regions
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  SROA
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0002 (  0.0%)   0.0000 (  0.0%)   0.0002 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead debug information intrinsic
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Detect single entry single exit regions
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominance Frontier Construction
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Promote Memory to Register
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  InterfaceEncodingChange - Change Interface Encoding format
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Rotate Loops
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominance Frontier Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  ShiftRegInference - Automatic Shift Register Inference
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Infer nuw/nsw flags for instructions
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate pointer selection
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Stream object marker
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  LegalizeName - Check interface name in terms of HDL syntax
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate pointer selection
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  SimplifyPredicate - Simplify predicate
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Reduce the height of tree
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Detect single entry single exit regions
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dead Global Elimination
   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dead Argument Elimination
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Rotate Loops
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Struct object aggregation
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dead Argument Elimination
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Loop-Closed SSA Form Pass
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominance Frontier Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  SimplifyPredicate - Simplify predicate
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead stores globally
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Infer direct input/output accesses
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Detect single entry single exit regions
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate pointer selection for FIFO
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate pointer selection
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  CallGraph Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Preprocessing before loop rotation
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalarize vector operations
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Disaggregation preprocessing
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate pointer selection
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  ProduceBurstMessages - Produce Burst Messages
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Promote Memory to Register
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate pointer selection
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominance Frontier Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominance Frontier Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead stores globally
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dead Argument Elimination
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Critical Path Aanlysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Delete dead loops
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Critical Path Aanlysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominance Frontier Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Critical Path Aanlysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  SROA
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Promote Memory to Register
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Delete dead loops
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Simplify loop CFG
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Simplify loop CFG
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Eliminate dead stores globally
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Generate Loops to iterate over workitems
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Simplify loop CFG
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Simplify loop CFG
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Remove unreachable basic blocks under switch
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  SROA
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Post-Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Loop Access Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  DefaultInterfaceBuilderNew - Build Default Top Interface
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Detect single entry single exit regions
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  LayoutTransform - Layout Transform Pragma Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Promote Memory to Register
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Scalar Evolution Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Delete dead loops
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  LayoutTransform - Layout Transform Pragma Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Function Alias Analysis Results
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Aggressive Dead Code Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Dominator Tree Construction
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Natural Loop Information
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Transform SSA value on top function to variable with pointer type
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Memory Dependence Analysis
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Simplify loop CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Delete dead loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Delete dead loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  SeqAccessesInference - Infer Sequential accesses for HLS C/C++
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Aggressive dead store elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0001 (  0.0%)   0.0000 (  0.0%)   0.0001 (  0.0%)   0.0000 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Canonicalize natural loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Natural Loop Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Unify function exit nodes
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  InterfaceCheck - Check Interface
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dominance Frontier Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Predicate analysis under a loop context
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Simplify loop CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  verify cache pragmas
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Reflow auto unroll loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Predicate analysis under a loop context
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Normalize loop index
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Predicate SPIR Kernels
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Promote Memory to Register
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  SPIRUpdateIntrRange - Update SPIR Intrinsics Metadata
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function Alias Analysis Results
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Function duplication
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower intrinsics for FPGAs
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Shrink Synchronization Regions in SPMD program to reduce CFG complexity
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Build Synchronization Regions in SPMD program
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dead Argument Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Simplify loop CFG
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Analyze occurrence information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Predicate analysis under a loop context
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  top function attribute attaching
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Extract occurrence region
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  DeSPMD - Insert barriers into uniform loops
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Assumption Cache Tracker
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Scalar Evolution Canonicalization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Vectorize the SPMD regions
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Value Information Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Expand private memory for each workitem in SPMD program
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Entirety access check on array-to-stream
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Infer workgroup size for opencl Kernel
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Memory Dependence Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  SPIRUpdateIntrRange - Update SPIR Intrinsics Metadata
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Eliminate dead stores globally
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Undecay arrays
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ScalarEvolution-based Alias Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  LCSSA Verifier
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  ArrayReshape - Reshape Arrays into Wider Arrays
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Branch Probability Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Optimization Remark Emitter
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lazy Block Frequency Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Infer direct input/output accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Basic Alias Analysis (stateless AA impl)
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Infer direct input/output accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Infer direct input/output accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Dead Global Elimination
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Undecay arrays
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interprocedural constant propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Delinearization
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Post-Dominator Tree Construction
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interprocedural constant propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Collect basic metrics for FE reflow
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Assumption Cache Tracker
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interprocedural constant propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  normalize array partition result to reduce redundant sub array arguments
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower llvm.assume to _ssdm_AssertFail
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Achieval II estimation - estimate acheival II lower bound according to constraint
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower HLS related intrinsics
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interprocedural constant propagation
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert direct input/output accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Array Access Range Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert PPPO for array-to-stream
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower intrinsics for FPGAs
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert PPPO for array-to-stream
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower HLS related intrinsics
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Structure Decomposition
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower intrinsics for FPGAs
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Eliminate guard varible
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert PPPO for array-to-stream
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Eliminate guard varible
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower memory intrinsic
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert PPPO for array-to-stream
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Lower intrinsics for FPGAs
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert direct input/output accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  A No-Op Barrier Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Outline pipeline stages
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Revert direct input/output accesses
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Entirety access check on array-to-stream
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  A No-Op Barrier Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Interface Analysis
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  A No-Op Barrier Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Target Transform Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  A No-Op Barrier Pass
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Target Library Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Profile summary info
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Target Library Information
   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)   0.0000 (  0.0%)  Target Transform Information
  12.4269 (100.0%)   0.5072 (100.0%)  12.9341 (100.0%)  12.9326 (100.0%)  Total

===-------------------------------------------------------------------------===
                                LLVM IR Parsing
===-------------------------------------------------------------------------===
  Total Execution Time: 0.0369 seconds (0.0369 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   0.0286 (100.0%)   0.0083 (100.0%)   0.0369 (100.0%)   0.0369 (100.0%)  Parse IR
   0.0286 (100.0%)   0.0083 (100.0%)   0.0369 (100.0%)   0.0369 (100.0%)  Total

===-------------------------------------------------------------------------===
                          Clang front-end time report
===-------------------------------------------------------------------------===
  Total Execution Time: 11.9822 seconds (11.9833 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
  11.4736 (100.0%)   0.5086 (100.0%)  11.9822 (100.0%)  11.9833 (100.0%)  Clang front-end timer
  11.4736 (100.0%)   0.5086 (100.0%)  11.9822 (100.0%)  11.9833 (100.0%)  Total

