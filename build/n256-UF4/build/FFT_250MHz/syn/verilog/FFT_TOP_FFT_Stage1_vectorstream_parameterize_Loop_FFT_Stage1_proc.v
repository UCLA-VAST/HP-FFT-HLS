// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module FFT_TOP_FFT_Stage1_vectorstream_parameterize_Loop_FFT_Stage1_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        reverse_in_stream_vector_dout,
        reverse_in_stream_vector_empty_n,
        reverse_in_stream_vector_read,
        reverse_in_stream_vector_num_data_valid,
        reverse_in_stream_vector_fifo_cap,
        data_s1_stream_vector_din,
        data_s1_stream_vector_full_n,
        data_s1_stream_vector_write,
        data_s1_stream_vector_num_data_valid,
        data_s1_stream_vector_fifo_cap
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [511:0] reverse_in_stream_vector_dout;
input   reverse_in_stream_vector_empty_n;
output   reverse_in_stream_vector_read;
input  [2:0] reverse_in_stream_vector_num_data_valid;
input  [2:0] reverse_in_stream_vector_fifo_cap;
output  [511:0] data_s1_stream_vector_din;
input   data_s1_stream_vector_full_n;
output   data_s1_stream_vector_write;
input  [31:0] data_s1_stream_vector_num_data_valid;
input  [31:0] data_s1_stream_vector_fifo_cap;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln451_fu_593_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    reverse_in_stream_vector_blk_n;
wire    ap_block_pp0_stage0;
reg    data_s1_stream_vector_blk_n;
wire   [31:0] d0_fu_401_p1;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] d0_24_fu_405_p1;
wire   [31:0] d1_fu_409_p1;
wire   [31:0] d1_44_fu_413_p1;
wire   [31:0] d0_25_fu_417_p1;
wire   [31:0] d0_26_fu_421_p1;
wire   [31:0] d1_45_fu_425_p1;
wire   [31:0] d1_46_fu_429_p1;
wire   [31:0] d0_27_fu_433_p1;
wire   [31:0] d0_28_fu_437_p1;
wire   [31:0] d1_47_fu_441_p1;
wire   [31:0] d1_48_fu_445_p1;
wire   [31:0] d0_29_fu_449_p1;
wire   [31:0] d0_30_fu_453_p1;
wire   [31:0] d1_49_fu_457_p1;
wire   [31:0] d1_50_fu_461_p1;
reg   [4:0] m1_fu_150;
wire   [4:0] m_fu_239_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_m1_load;
reg    reverse_in_stream_vector_read_local;
wire   [511:0] or_ln466_s_fu_668_p17;
reg    ap_block_pp0_stage0_01001;
reg    data_s1_stream_vector_write_local;
reg   [31:0] grp_fu_167_p0;
reg   [31:0] grp_fu_167_p1;
reg   [31:0] grp_fu_171_p0;
reg   [31:0] grp_fu_171_p1;
reg   [31:0] grp_fu_175_p0;
reg   [31:0] grp_fu_175_p1;
reg   [31:0] grp_fu_179_p0;
reg   [31:0] grp_fu_179_p1;
reg   [31:0] grp_fu_183_p0;
reg   [31:0] grp_fu_183_p1;
reg   [31:0] grp_fu_187_p0;
reg   [31:0] grp_fu_187_p1;
reg   [31:0] grp_fu_191_p0;
reg   [31:0] grp_fu_191_p1;
reg   [31:0] grp_fu_195_p0;
reg   [31:0] grp_fu_195_p1;
reg   [31:0] grp_fu_199_p0;
reg   [31:0] grp_fu_199_p1;
reg   [31:0] grp_fu_203_p0;
reg   [31:0] grp_fu_203_p1;
reg   [31:0] grp_fu_207_p0;
reg   [31:0] grp_fu_207_p1;
reg   [31:0] grp_fu_211_p0;
reg   [31:0] grp_fu_211_p1;
reg   [31:0] grp_fu_215_p0;
reg   [31:0] grp_fu_215_p1;
reg   [31:0] grp_fu_219_p0;
reg   [31:0] grp_fu_219_p1;
reg   [31:0] grp_fu_223_p0;
reg   [31:0] grp_fu_223_p1;
reg   [31:0] grp_fu_227_p0;
reg   [31:0] grp_fu_227_p1;
wire   [31:0] trunc_ln456_fu_247_p1;
wire   [31:0] trunc_ln456_2_fu_251_p4;
wire   [31:0] trunc_ln456_3_fu_261_p4;
wire   [31:0] trunc_ln456_4_fu_271_p4;
wire   [31:0] trunc_ln456_5_fu_281_p4;
wire   [31:0] trunc_ln456_6_fu_291_p4;
wire   [31:0] trunc_ln456_7_fu_301_p4;
wire   [31:0] trunc_ln456_8_fu_311_p4;
wire   [31:0] trunc_ln456_9_fu_321_p4;
wire   [31:0] trunc_ln456_s_fu_331_p4;
wire   [31:0] trunc_ln456_1_fu_341_p4;
wire   [31:0] trunc_ln456_10_fu_351_p4;
wire   [31:0] trunc_ln456_11_fu_361_p4;
wire   [31:0] trunc_ln456_12_fu_371_p4;
wire   [31:0] trunc_ln456_13_fu_381_p4;
wire   [31:0] trunc_ln456_14_fu_391_p4;
reg   [31:0] grp_fu_167_p2;
reg   [31:0] grp_fu_171_p2;
reg   [31:0] grp_fu_175_p2;
reg   [31:0] grp_fu_179_p2;
reg   [31:0] grp_fu_183_p2;
reg   [31:0] grp_fu_187_p2;
reg   [31:0] grp_fu_191_p2;
reg   [31:0] grp_fu_195_p2;
reg   [31:0] grp_fu_199_p2;
reg   [31:0] grp_fu_203_p2;
reg   [31:0] grp_fu_207_p2;
reg   [31:0] grp_fu_211_p2;
reg   [31:0] grp_fu_215_p2;
reg   [31:0] grp_fu_219_p2;
reg   [31:0] grp_fu_223_p2;
reg   [31:0] grp_fu_227_p2;
wire   [31:0] bitcast_ln466_15_fu_664_p1;
wire   [31:0] bitcast_ln466_14_fu_660_p1;
wire   [31:0] bitcast_ln466_13_fu_656_p1;
wire   [31:0] bitcast_ln466_12_fu_652_p1;
wire   [31:0] bitcast_ln466_11_fu_648_p1;
wire   [31:0] bitcast_ln466_10_fu_644_p1;
wire   [31:0] bitcast_ln466_9_fu_640_p1;
wire   [31:0] bitcast_ln466_8_fu_636_p1;
wire   [31:0] bitcast_ln466_7_fu_632_p1;
wire   [31:0] bitcast_ln466_6_fu_628_p1;
wire   [31:0] bitcast_ln466_5_fu_624_p1;
wire   [31:0] bitcast_ln466_4_fu_620_p1;
wire   [31:0] bitcast_ln466_3_fu_616_p1;
wire   [31:0] bitcast_ln466_2_fu_612_p1;
wire   [31:0] bitcast_ln466_1_fu_608_p1;
wire   [31:0] bitcast_ln466_fu_604_p1;
reg    grp_fu_167_ce;
wire   [31:0] pre_grp_fu_167_p2;
reg   [31:0] pre_grp_fu_167_p2_reg;
reg    grp_fu_171_ce;
wire   [31:0] pre_grp_fu_171_p2;
reg   [31:0] pre_grp_fu_171_p2_reg;
reg    grp_fu_175_ce;
wire   [31:0] pre_grp_fu_175_p2;
reg   [31:0] pre_grp_fu_175_p2_reg;
reg    grp_fu_179_ce;
wire   [31:0] pre_grp_fu_179_p2;
reg   [31:0] pre_grp_fu_179_p2_reg;
reg    grp_fu_183_ce;
wire   [31:0] pre_grp_fu_183_p2;
reg   [31:0] pre_grp_fu_183_p2_reg;
reg    grp_fu_187_ce;
wire   [31:0] pre_grp_fu_187_p2;
reg   [31:0] pre_grp_fu_187_p2_reg;
reg    grp_fu_191_ce;
wire   [31:0] pre_grp_fu_191_p2;
reg   [31:0] pre_grp_fu_191_p2_reg;
reg    grp_fu_195_ce;
wire   [31:0] pre_grp_fu_195_p2;
reg   [31:0] pre_grp_fu_195_p2_reg;
reg    grp_fu_199_ce;
wire   [31:0] pre_grp_fu_199_p2;
reg   [31:0] pre_grp_fu_199_p2_reg;
reg    grp_fu_203_ce;
wire   [31:0] pre_grp_fu_203_p2;
reg   [31:0] pre_grp_fu_203_p2_reg;
reg    grp_fu_207_ce;
wire   [31:0] pre_grp_fu_207_p2;
reg   [31:0] pre_grp_fu_207_p2_reg;
reg    grp_fu_211_ce;
wire   [31:0] pre_grp_fu_211_p2;
reg   [31:0] pre_grp_fu_211_p2_reg;
reg    grp_fu_215_ce;
wire   [31:0] pre_grp_fu_215_p2;
reg   [31:0] pre_grp_fu_215_p2_reg;
reg    grp_fu_219_ce;
wire   [31:0] pre_grp_fu_219_p2;
reg   [31:0] pre_grp_fu_219_p2_reg;
reg    grp_fu_223_ce;
wire   [31:0] pre_grp_fu_223_p2;
reg   [31:0] pre_grp_fu_223_p2_reg;
reg    grp_fu_227_ce;
wire   [31:0] pre_grp_fu_227_p2;
reg   [31:0] pre_grp_fu_227_p2_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
reg    ap_condition_201;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 m1_fu_150 = 5'd0;
end

FFT_TOP_fadd_32ns_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_167_p0),
    .din1(grp_fu_167_p1),
    .ce(grp_fu_167_ce),
    .dout(pre_grp_fu_167_p2)
);

FFT_TOP_fadd_32ns_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_no_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_171_p0),
    .din1(grp_fu_171_p1),
    .ce(grp_fu_171_ce),
    .dout(pre_grp_fu_171_p2)
);

FFT_TOP_fsub_32ns_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_4_no_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_175_p0),
    .din1(grp_fu_175_p1),
    .ce(grp_fu_175_ce),
    .dout(pre_grp_fu_175_p2)
);

FFT_TOP_fsub_32ns_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_4_no_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_179_p0),
    .din1(grp_fu_179_p1),
    .ce(grp_fu_179_ce),
    .dout(pre_grp_fu_179_p2)
);

FFT_TOP_fadd_32ns_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_no_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_183_p0),
    .din1(grp_fu_183_p1),
    .ce(grp_fu_183_ce),
    .dout(pre_grp_fu_183_p2)
);

FFT_TOP_fadd_32ns_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_no_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_187_p0),
    .din1(grp_fu_187_p1),
    .ce(grp_fu_187_ce),
    .dout(pre_grp_fu_187_p2)
);

FFT_TOP_fsub_32ns_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_4_no_dsp_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_191_p0),
    .din1(grp_fu_191_p1),
    .ce(grp_fu_191_ce),
    .dout(pre_grp_fu_191_p2)
);

FFT_TOP_fsub_32ns_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_4_no_dsp_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_195_p0),
    .din1(grp_fu_195_p1),
    .ce(grp_fu_195_ce),
    .dout(pre_grp_fu_195_p2)
);

FFT_TOP_fadd_32ns_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_no_dsp_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_199_p0),
    .din1(grp_fu_199_p1),
    .ce(grp_fu_199_ce),
    .dout(pre_grp_fu_199_p2)
);

FFT_TOP_fadd_32ns_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_no_dsp_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_203_p0),
    .din1(grp_fu_203_p1),
    .ce(grp_fu_203_ce),
    .dout(pre_grp_fu_203_p2)
);

FFT_TOP_fsub_32ns_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_4_no_dsp_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_207_p0),
    .din1(grp_fu_207_p1),
    .ce(grp_fu_207_ce),
    .dout(pre_grp_fu_207_p2)
);

FFT_TOP_fsub_32ns_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_4_no_dsp_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_211_p0),
    .din1(grp_fu_211_p1),
    .ce(grp_fu_211_ce),
    .dout(pre_grp_fu_211_p2)
);

FFT_TOP_fadd_32ns_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_no_dsp_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_215_p0),
    .din1(grp_fu_215_p1),
    .ce(grp_fu_215_ce),
    .dout(pre_grp_fu_215_p2)
);

FFT_TOP_fadd_32ns_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_no_dsp_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_219_p0),
    .din1(grp_fu_219_p1),
    .ce(grp_fu_219_ce),
    .dout(pre_grp_fu_219_p2)
);

FFT_TOP_fsub_32ns_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_4_no_dsp_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_223_p0),
    .din1(grp_fu_223_p1),
    .ce(grp_fu_223_ce),
    .dout(pre_grp_fu_223_p2)
);

FFT_TOP_fsub_32ns_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_4_no_dsp_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_227_p0),
    .din1(grp_fu_227_p1),
    .ce(grp_fu_227_ce),
    .dout(pre_grp_fu_227_p2)
);

FFT_TOP_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b0))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_167_ce <= 1'b1;
    end else begin
        grp_fu_167_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_171_ce <= 1'b1;
    end else begin
        grp_fu_171_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_175_ce <= 1'b1;
    end else begin
        grp_fu_175_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_179_ce <= 1'b1;
    end else begin
        grp_fu_179_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_183_ce <= 1'b1;
    end else begin
        grp_fu_183_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_187_ce <= 1'b1;
    end else begin
        grp_fu_187_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_191_ce <= 1'b1;
    end else begin
        grp_fu_191_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_195_ce <= 1'b1;
    end else begin
        grp_fu_195_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_199_ce <= 1'b1;
    end else begin
        grp_fu_199_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_203_ce <= 1'b1;
    end else begin
        grp_fu_203_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_207_ce <= 1'b1;
    end else begin
        grp_fu_207_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_211_ce <= 1'b1;
    end else begin
        grp_fu_211_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_215_ce <= 1'b1;
    end else begin
        grp_fu_215_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_219_ce <= 1'b1;
    end else begin
        grp_fu_219_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_223_ce <= 1'b1;
    end else begin
        grp_fu_223_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_227_ce <= 1'b1;
    end else begin
        grp_fu_227_ce <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_201)) begin
        m1_fu_150 <= m_fu_239_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_167_p0 <= d0_fu_401_p1;
        grp_fu_167_p1 <= d1_fu_409_p1;
        grp_fu_171_p0 <= d0_24_fu_405_p1;
        grp_fu_171_p1 <= d1_44_fu_413_p1;
        grp_fu_175_p0 <= d0_fu_401_p1;
        grp_fu_175_p1 <= d1_fu_409_p1;
        grp_fu_179_p0 <= d0_24_fu_405_p1;
        grp_fu_179_p1 <= d1_44_fu_413_p1;
        grp_fu_183_p0 <= d0_25_fu_417_p1;
        grp_fu_183_p1 <= d1_45_fu_425_p1;
        grp_fu_187_p0 <= d0_26_fu_421_p1;
        grp_fu_187_p1 <= d1_46_fu_429_p1;
        grp_fu_191_p0 <= d0_25_fu_417_p1;
        grp_fu_191_p1 <= d1_45_fu_425_p1;
        grp_fu_195_p0 <= d0_26_fu_421_p1;
        grp_fu_195_p1 <= d1_46_fu_429_p1;
        grp_fu_199_p0 <= d0_27_fu_433_p1;
        grp_fu_199_p1 <= d1_47_fu_441_p1;
        grp_fu_203_p0 <= d0_28_fu_437_p1;
        grp_fu_203_p1 <= d1_48_fu_445_p1;
        grp_fu_207_p0 <= d0_27_fu_433_p1;
        grp_fu_207_p1 <= d1_47_fu_441_p1;
        grp_fu_211_p0 <= d0_28_fu_437_p1;
        grp_fu_211_p1 <= d1_48_fu_445_p1;
        grp_fu_215_p0 <= d0_29_fu_449_p1;
        grp_fu_215_p1 <= d1_49_fu_457_p1;
        grp_fu_219_p0 <= d0_30_fu_453_p1;
        grp_fu_219_p1 <= d1_50_fu_461_p1;
        grp_fu_223_p0 <= d0_29_fu_449_p1;
        grp_fu_223_p1 <= d1_49_fu_457_p1;
        grp_fu_227_p0 <= d0_30_fu_453_p1;
        grp_fu_227_p1 <= d1_50_fu_461_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_167_ce == 1'b1)) begin
        pre_grp_fu_167_p2_reg <= pre_grp_fu_167_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_171_ce == 1'b1)) begin
        pre_grp_fu_171_p2_reg <= pre_grp_fu_171_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_175_ce == 1'b1)) begin
        pre_grp_fu_175_p2_reg <= pre_grp_fu_175_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_179_ce == 1'b1)) begin
        pre_grp_fu_179_p2_reg <= pre_grp_fu_179_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_183_ce == 1'b1)) begin
        pre_grp_fu_183_p2_reg <= pre_grp_fu_183_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_187_ce == 1'b1)) begin
        pre_grp_fu_187_p2_reg <= pre_grp_fu_187_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_191_ce == 1'b1)) begin
        pre_grp_fu_191_p2_reg <= pre_grp_fu_191_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_195_ce == 1'b1)) begin
        pre_grp_fu_195_p2_reg <= pre_grp_fu_195_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_199_ce == 1'b1)) begin
        pre_grp_fu_199_p2_reg <= pre_grp_fu_199_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_203_ce == 1'b1)) begin
        pre_grp_fu_203_p2_reg <= pre_grp_fu_203_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_207_ce == 1'b1)) begin
        pre_grp_fu_207_p2_reg <= pre_grp_fu_207_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_211_ce == 1'b1)) begin
        pre_grp_fu_211_p2_reg <= pre_grp_fu_211_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_215_ce == 1'b1)) begin
        pre_grp_fu_215_p2_reg <= pre_grp_fu_215_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_219_ce == 1'b1)) begin
        pre_grp_fu_219_p2_reg <= pre_grp_fu_219_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_223_ce == 1'b1)) begin
        pre_grp_fu_223_p2_reg <= pre_grp_fu_223_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_227_ce == 1'b1)) begin
        pre_grp_fu_227_p2_reg <= pre_grp_fu_227_p2;
    end
end

always @ (*) begin
    if (((icmp_ln451_fu_593_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_m1_load = 5'd0;
    end else begin
        ap_sig_allocacmp_m1_load = m1_fu_150;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        data_s1_stream_vector_blk_n = data_s1_stream_vector_full_n;
    end else begin
        data_s1_stream_vector_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        data_s1_stream_vector_write_local = 1'b1;
    end else begin
        data_s1_stream_vector_write_local = 1'b0;
    end
end

always @ (*) begin
    if ((grp_fu_167_ce == 1'b1)) begin
        grp_fu_167_p2 = pre_grp_fu_167_p2;
    end else begin
        grp_fu_167_p2 = pre_grp_fu_167_p2_reg;
    end
end

always @ (*) begin
    if ((grp_fu_171_ce == 1'b1)) begin
        grp_fu_171_p2 = pre_grp_fu_171_p2;
    end else begin
        grp_fu_171_p2 = pre_grp_fu_171_p2_reg;
    end
end

always @ (*) begin
    if ((grp_fu_175_ce == 1'b1)) begin
        grp_fu_175_p2 = pre_grp_fu_175_p2;
    end else begin
        grp_fu_175_p2 = pre_grp_fu_175_p2_reg;
    end
end

always @ (*) begin
    if ((grp_fu_179_ce == 1'b1)) begin
        grp_fu_179_p2 = pre_grp_fu_179_p2;
    end else begin
        grp_fu_179_p2 = pre_grp_fu_179_p2_reg;
    end
end

always @ (*) begin
    if ((grp_fu_183_ce == 1'b1)) begin
        grp_fu_183_p2 = pre_grp_fu_183_p2;
    end else begin
        grp_fu_183_p2 = pre_grp_fu_183_p2_reg;
    end
end

always @ (*) begin
    if ((grp_fu_187_ce == 1'b1)) begin
        grp_fu_187_p2 = pre_grp_fu_187_p2;
    end else begin
        grp_fu_187_p2 = pre_grp_fu_187_p2_reg;
    end
end

always @ (*) begin
    if ((grp_fu_191_ce == 1'b1)) begin
        grp_fu_191_p2 = pre_grp_fu_191_p2;
    end else begin
        grp_fu_191_p2 = pre_grp_fu_191_p2_reg;
    end
end

always @ (*) begin
    if ((grp_fu_195_ce == 1'b1)) begin
        grp_fu_195_p2 = pre_grp_fu_195_p2;
    end else begin
        grp_fu_195_p2 = pre_grp_fu_195_p2_reg;
    end
end

always @ (*) begin
    if ((grp_fu_199_ce == 1'b1)) begin
        grp_fu_199_p2 = pre_grp_fu_199_p2;
    end else begin
        grp_fu_199_p2 = pre_grp_fu_199_p2_reg;
    end
end

always @ (*) begin
    if ((grp_fu_203_ce == 1'b1)) begin
        grp_fu_203_p2 = pre_grp_fu_203_p2;
    end else begin
        grp_fu_203_p2 = pre_grp_fu_203_p2_reg;
    end
end

always @ (*) begin
    if ((grp_fu_207_ce == 1'b1)) begin
        grp_fu_207_p2 = pre_grp_fu_207_p2;
    end else begin
        grp_fu_207_p2 = pre_grp_fu_207_p2_reg;
    end
end

always @ (*) begin
    if ((grp_fu_211_ce == 1'b1)) begin
        grp_fu_211_p2 = pre_grp_fu_211_p2;
    end else begin
        grp_fu_211_p2 = pre_grp_fu_211_p2_reg;
    end
end

always @ (*) begin
    if ((grp_fu_215_ce == 1'b1)) begin
        grp_fu_215_p2 = pre_grp_fu_215_p2;
    end else begin
        grp_fu_215_p2 = pre_grp_fu_215_p2_reg;
    end
end

always @ (*) begin
    if ((grp_fu_219_ce == 1'b1)) begin
        grp_fu_219_p2 = pre_grp_fu_219_p2;
    end else begin
        grp_fu_219_p2 = pre_grp_fu_219_p2_reg;
    end
end

always @ (*) begin
    if ((grp_fu_223_ce == 1'b1)) begin
        grp_fu_223_p2 = pre_grp_fu_223_p2;
    end else begin
        grp_fu_223_p2 = pre_grp_fu_223_p2_reg;
    end
end

always @ (*) begin
    if ((grp_fu_227_ce == 1'b1)) begin
        grp_fu_227_p2 = pre_grp_fu_227_p2;
    end else begin
        grp_fu_227_p2 = pre_grp_fu_227_p2_reg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_done_reg == 1'b0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        reverse_in_stream_vector_blk_n = reverse_in_stream_vector_empty_n;
    end else begin
        reverse_in_stream_vector_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        reverse_in_stream_vector_read_local = 1'b1;
    end else begin
        reverse_in_stream_vector_read_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage0_iter4)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage0_iter4)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage0_iter4)) | ((ap_start_int == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_done_reg == 1'b1) | (reverse_in_stream_vector_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter4 = (data_s1_stream_vector_full_n == 1'b0);
end

always @ (*) begin
    ap_condition_201 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign bitcast_ln466_10_fu_644_p1 = grp_fu_207_p2;

assign bitcast_ln466_11_fu_648_p1 = grp_fu_211_p2;

assign bitcast_ln466_12_fu_652_p1 = grp_fu_215_p2;

assign bitcast_ln466_13_fu_656_p1 = grp_fu_219_p2;

assign bitcast_ln466_14_fu_660_p1 = grp_fu_223_p2;

assign bitcast_ln466_15_fu_664_p1 = grp_fu_227_p2;

assign bitcast_ln466_1_fu_608_p1 = grp_fu_171_p2;

assign bitcast_ln466_2_fu_612_p1 = grp_fu_175_p2;

assign bitcast_ln466_3_fu_616_p1 = grp_fu_179_p2;

assign bitcast_ln466_4_fu_620_p1 = grp_fu_183_p2;

assign bitcast_ln466_5_fu_624_p1 = grp_fu_187_p2;

assign bitcast_ln466_6_fu_628_p1 = grp_fu_191_p2;

assign bitcast_ln466_7_fu_632_p1 = grp_fu_195_p2;

assign bitcast_ln466_8_fu_636_p1 = grp_fu_199_p2;

assign bitcast_ln466_9_fu_640_p1 = grp_fu_203_p2;

assign bitcast_ln466_fu_604_p1 = grp_fu_167_p2;

assign d0_24_fu_405_p1 = trunc_ln456_2_fu_251_p4;

assign d0_25_fu_417_p1 = trunc_ln456_5_fu_281_p4;

assign d0_26_fu_421_p1 = trunc_ln456_6_fu_291_p4;

assign d0_27_fu_433_p1 = trunc_ln456_9_fu_321_p4;

assign d0_28_fu_437_p1 = trunc_ln456_s_fu_331_p4;

assign d0_29_fu_449_p1 = trunc_ln456_11_fu_361_p4;

assign d0_30_fu_453_p1 = trunc_ln456_12_fu_371_p4;

assign d0_fu_401_p1 = trunc_ln456_fu_247_p1;

assign d1_44_fu_413_p1 = trunc_ln456_4_fu_271_p4;

assign d1_45_fu_425_p1 = trunc_ln456_7_fu_301_p4;

assign d1_46_fu_429_p1 = trunc_ln456_8_fu_311_p4;

assign d1_47_fu_441_p1 = trunc_ln456_1_fu_341_p4;

assign d1_48_fu_445_p1 = trunc_ln456_10_fu_351_p4;

assign d1_49_fu_457_p1 = trunc_ln456_13_fu_381_p4;

assign d1_50_fu_461_p1 = trunc_ln456_14_fu_391_p4;

assign d1_fu_409_p1 = trunc_ln456_3_fu_261_p4;

assign data_s1_stream_vector_din = or_ln466_s_fu_668_p17;

assign data_s1_stream_vector_write = data_s1_stream_vector_write_local;

assign icmp_ln451_fu_593_p2 = ((ap_sig_allocacmp_m1_load == 5'd31) ? 1'b1 : 1'b0);

assign m_fu_239_p2 = (ap_sig_allocacmp_m1_load + 5'd1);

assign or_ln466_s_fu_668_p17 = {{{{{{{{{{{{{{{{bitcast_ln466_15_fu_664_p1}, {bitcast_ln466_14_fu_660_p1}}, {bitcast_ln466_13_fu_656_p1}}, {bitcast_ln466_12_fu_652_p1}}, {bitcast_ln466_11_fu_648_p1}}, {bitcast_ln466_10_fu_644_p1}}, {bitcast_ln466_9_fu_640_p1}}, {bitcast_ln466_8_fu_636_p1}}, {bitcast_ln466_7_fu_632_p1}}, {bitcast_ln466_6_fu_628_p1}}, {bitcast_ln466_5_fu_624_p1}}, {bitcast_ln466_4_fu_620_p1}}, {bitcast_ln466_3_fu_616_p1}}, {bitcast_ln466_2_fu_612_p1}}, {bitcast_ln466_1_fu_608_p1}}, {bitcast_ln466_fu_604_p1}};

assign reverse_in_stream_vector_read = reverse_in_stream_vector_read_local;

assign trunc_ln456_10_fu_351_p4 = {{reverse_in_stream_vector_dout[383:352]}};

assign trunc_ln456_11_fu_361_p4 = {{reverse_in_stream_vector_dout[415:384]}};

assign trunc_ln456_12_fu_371_p4 = {{reverse_in_stream_vector_dout[447:416]}};

assign trunc_ln456_13_fu_381_p4 = {{reverse_in_stream_vector_dout[479:448]}};

assign trunc_ln456_14_fu_391_p4 = {{reverse_in_stream_vector_dout[511:480]}};

assign trunc_ln456_1_fu_341_p4 = {{reverse_in_stream_vector_dout[351:320]}};

assign trunc_ln456_2_fu_251_p4 = {{reverse_in_stream_vector_dout[63:32]}};

assign trunc_ln456_3_fu_261_p4 = {{reverse_in_stream_vector_dout[95:64]}};

assign trunc_ln456_4_fu_271_p4 = {{reverse_in_stream_vector_dout[127:96]}};

assign trunc_ln456_5_fu_281_p4 = {{reverse_in_stream_vector_dout[159:128]}};

assign trunc_ln456_6_fu_291_p4 = {{reverse_in_stream_vector_dout[191:160]}};

assign trunc_ln456_7_fu_301_p4 = {{reverse_in_stream_vector_dout[223:192]}};

assign trunc_ln456_8_fu_311_p4 = {{reverse_in_stream_vector_dout[255:224]}};

assign trunc_ln456_9_fu_321_p4 = {{reverse_in_stream_vector_dout[287:256]}};

assign trunc_ln456_fu_247_p1 = reverse_in_stream_vector_dout[31:0];

assign trunc_ln456_s_fu_331_p4 = {{reverse_in_stream_vector_dout[319:288]}};

endmodule //FFT_TOP_FFT_Stage1_vectorstream_parameterize_Loop_FFT_Stage1_proc
